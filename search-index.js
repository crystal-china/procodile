crystal_doc_search_index_callback({"repository_name":"procodile","body":"# Procodile üêä\n\nRunning & deploying Ruby apps to places like [Viaduct](https://viaduct.io) & Heroku is really easy but running processes on actual servers is less fun. Procodile aims to take some the stress out of running your Ruby/Rails apps and give you some of the useful process management features you get from the takes of the PaaS providers.\n\nProcodile is a bit like [Foreman](https://github.com/ddollar/foreman) but things are designed to run in the background (as well as the foreground if you prefer) and there's a supervisor which keeps an eye on your processes and will respawn them if they die.\n\nProcodile works out of the box with your existing `Procfile`.\n\n* [Watch a quick screencast](https://vimeo.com/188041935)\n* [Read documentation](https://github.com/adamcooke/procodile/wiki)\n* [View on RubyGems](https://rubygems.org/gems/procodile)\n* [Check the CHANGELOG](https://github.com/adamcooke/procodile/blob/master/CHANGELOG.md)\n\n![Screenshot](https://share.adam.ac/16/cAZRKUM7.png)\n","program":{"html_id":"procodile/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"procodile","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"procodile/Process","path":"Process.html","kind":"class","full_name":"Process","name":"Process","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/core_ext/process.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/core_ext/process.cr#L1"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"class_methods":[{"html_id":"fork(&):Process-class-method","name":"fork","doc":"override ::Process.fork in stdlib for suppress the warning message.","summary":"<p>override ::Process.fork in stdlib for suppress the warning message.</p>","abstract":false,"location":{"filename":"src/procodile/core_ext/process.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/core_ext/process.cr#L3"},"def":{"name":"fork","yields":0,"block_arity":0,"return_type":"::Process","visibility":"Public","body":"new(Crystal::System::Process.fork do\n  yield\nend)"}}]},{"html_id":"procodile/Procodile","path":"Procodile.html","kind":"module","full_name":"Procodile","name":"Procodile","abstract":false,"locations":[{"filename":"src/procodile.cr","line_number":4,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile.cr#L4"},{"filename":"src/procodile/app_determination.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/app_determination.cr#L1"},{"filename":"src/procodile/cli.cr","line_number":6,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L6"},{"filename":"src/procodile/commands/check_concurrency_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/check_concurrency_command.cr#L1"},{"filename":"src/procodile/commands/console_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/console_command.cr#L1"},{"filename":"src/procodile/commands/exec_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/exec_command.cr#L1"},{"filename":"src/procodile/commands/help_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/help_command.cr#L1"},{"filename":"src/procodile/commands/kill_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/kill_command.cr#L1"},{"filename":"src/procodile/commands/log_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/log_command.cr#L1"},{"filename":"src/procodile/commands/restart_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/restart_command.cr#L1"},{"filename":"src/procodile/commands/run_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/run_command.cr#L1"},{"filename":"src/procodile/commands/start_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/start_command.cr#L1"},{"filename":"src/procodile/commands/status_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/status_command.cr#L1"},{"filename":"src/procodile/commands/stop_command.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/stop_command.cr#L1"},{"filename":"src/procodile/config.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L3"},{"filename":"src/procodile/control_client.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L1"},{"filename":"src/procodile/control_server.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_server.cr#L3"},{"filename":"src/procodile/control_session.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L1"},{"filename":"src/procodile/instance.cr","line_number":4,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L4"},{"filename":"src/procodile/logger.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/logger.cr#L1"},{"filename":"src/procodile/process.cr","line_number":4,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L4"},{"filename":"src/procodile/signal_handler.cr","line_number":7,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/signal_handler.cr#L7"},{"filename":"src/procodile/start_supervisor.cr","line_number":1,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/start_supervisor.cr#L1"},{"filename":"src/procodile/supervisor.cr","line_number":5,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L5"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"ORIGINAL_ARGV","name":"ORIGINAL_ARGV","value":"ARGV.join(\" \")"},{"id":"VERSION","name":"VERSION","value":"{{ (((`shards version \\\"/home/runner/work/procodile/procodile/src\\\"`).chomp.stringify + \" (rev \") + (`git rev-parse --short HEAD`).chomp.stringify) + \")\" }}"}],"class_methods":[{"html_id":"log(color:Colorize::ColorANSI|Nil,name:String,text:String):Nil-class-method","name":"log","abstract":false,"args":[{"name":"color","external_name":"color","restriction":"Colorize::ColorANSI | ::Nil"},{"name":"name","external_name":"name","restriction":"String"},{"name":"text","external_name":"text","restriction":"String"}],"args_string":"(color : Colorize::ColorANSI | Nil, name : String, text : String) : Nil","args_html":"(color : Colorize::ColorANSI | Nil, name : String, text : String) : Nil","location":{"filename":"src/procodile/logger.cr","line_number":4,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/logger.cr#L4"},"def":{"name":"log","args":[{"name":"color","external_name":"color","restriction":"Colorize::ColorANSI | ::Nil"},{"name":"name","external_name":"name","restriction":"String"},{"name":"text","external_name":"text","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"if color.nil?\n  color = Colorize::ColorANSI::Default\nend\nlogger_mutex.synchronize do\n  text.each_line do |message|\n    STDOUT << (\"#{Time.local.to_s(\"%H:%M:%S\")} #{name.ljust(18, ' ')} | \".colorize(color))\n    STDOUT << message\n    STDOUT << \"\\n\"\n  end\n  STDOUT.flush\nend\n"}}],"types":[{"html_id":"procodile/Procodile/AppDetermination","path":"Procodile/AppDetermination.html","kind":"class","full_name":"Procodile::AppDetermination","name":"AppDetermination","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/app_determination.cr","line_number":5,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/app_determination.cr#L5"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"},"doc":"\nThis class is responsible for determining which application should be used\n","summary":"<p>This class is responsible for determining which application should be used</p>","constructors":[{"html_id":"new(pwd:String,given_root:String|Nil,given_procfile:String|Nil,global_options:Array(Config::GlobalOption)=[]ofConfig::GlobalOption)-class-method","name":"new","doc":"Start by creating an determination ased on the root and procfile that has been provided\nto us by the user (from --root and/or --procfile)","summary":"<p>Start by creating an determination ased on the root and procfile that has been provided to us by the user (from --root and/or --procfile)</p>","abstract":false,"args":[{"name":"pwd","external_name":"pwd","restriction":"String"},{"name":"given_root","external_name":"given_root","restriction":"String | ::Nil"},{"name":"given_procfile","external_name":"given_procfile","restriction":"String | ::Nil"},{"name":"global_options","default_value":"[] of Config::GlobalOption","external_name":"global_options","restriction":"Array(Config::GlobalOption)"}],"args_string":"(pwd : String, given_root : String | Nil, given_procfile : String | Nil, global_options : Array(Config::GlobalOption) = [] of Config::GlobalOption)","args_html":"(pwd : String, given_root : String | Nil, given_procfile : String | Nil, global_options : Array(<a href=\"../Procodile/Config/GlobalOption.html\">Config::GlobalOption</a>) = <span class=\"o\">[]</span> <span class=\"k\">of</span> <span class=\"t\">Config</span><span class=\"t\">::</span><span class=\"t\">GlobalOption</span>)","location":{"filename":"src/procodile/app_determination.cr","line_number":14,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/app_determination.cr#L14"},"def":{"name":"new","args":[{"name":"pwd","external_name":"pwd","restriction":"String"},{"name":"given_root","external_name":"given_root","restriction":"String | ::Nil"},{"name":"given_procfile","external_name":"given_procfile","restriction":"String | ::Nil"},{"name":"global_options","default_value":"[] of Config::GlobalOption","external_name":"global_options","restriction":"Array(Config::GlobalOption)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(pwd, given_root, given_procfile, global_options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"ambiguous?:Bool-instance-method","name":"ambiguous?","doc":"No root","summary":"<p>No root</p>","abstract":false,"location":{"filename":"src/procodile/app_determination.cr","line_number":26,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/app_determination.cr#L26"},"def":{"name":"ambiguous?","return_type":"Bool","visibility":"Public","body":"!@root"}},{"html_id":"app_options:Hash(Int32,String)-instance-method","name":"app_options","doc":"Return an hash of possible options to settle the ambiguity","summary":"<p>Return an hash of possible options to settle the ambiguity</p>","abstract":false,"location":{"filename":"src/procodile/app_determination.cr","line_number":38,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/app_determination.cr#L38"},"def":{"name":"app_options","return_type":"Hash(Int32, String)","visibility":"Public","body":"if ambiguous?\n  hash = {} of Int32 => String\n  @global_options.each_with_index do |option, i|\n    hash[i] = option.name || option.root\n  end\n  hash\nelse\n  {} of Int32 => String\nend"}},{"html_id":"procfile:String|Nil-instance-method","name":"procfile","abstract":false,"location":{"filename":"src/procodile/app_determination.cr","line_number":10,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/app_determination.cr#L10"},"def":{"name":"procfile","return_type":"String | ::Nil","visibility":"Public","body":"@procfile"}},{"html_id":"root:String|Nil-instance-method","name":"root","abstract":false,"location":{"filename":"src/procodile/app_determination.cr","line_number":9,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/app_determination.cr#L9"},"def":{"name":"root","return_type":"String | ::Nil","visibility":"Public","body":"@root"}},{"html_id":"set_app_id_and_find_root_and_procfile(id:Int32):Nil-instance-method","name":"set_app_id_and_find_root_and_procfile","doc":"Choose which of the ambiguous options we want to choose","summary":"<p>Choose which of the ambiguous options we want to choose</p>","abstract":false,"args":[{"name":"id","external_name":"id","restriction":"Int32"}],"args_string":"(id : Int32) : Nil","args_html":"(id : Int32) : Nil","location":{"filename":"src/procodile/app_determination.cr","line_number":31,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/app_determination.cr#L31"},"def":{"name":"set_app_id_and_find_root_and_procfile","args":[{"name":"id","external_name":"id","restriction":"Int32"}],"return_type":"Nil","visibility":"Public","body":"@app_id = id\nfind_root_and_procfile_from_options(@global_options)\n"}}]},{"html_id":"procodile/Procodile/CLI","path":"Procodile/CLI.html","kind":"class","full_name":"Procodile::CLI","name":"CLI","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Procodile/CLI/ConsoleCommand","kind":"module","full_name":"Procodile::CLI::ConsoleCommand","name":"ConsoleCommand"},{"html_id":"procodile/Procodile/CLI/StatusCommand","kind":"module","full_name":"Procodile::CLI::StatusCommand","name":"StatusCommand"},{"html_id":"procodile/Procodile/CLI/RestartCommand","kind":"module","full_name":"Procodile::CLI::RestartCommand","name":"RestartCommand"},{"html_id":"procodile/Procodile/CLI/LogCommand","kind":"module","full_name":"Procodile::CLI::LogCommand","name":"LogCommand"},{"html_id":"procodile/Procodile/CLI/CheckConcurrencyCommand","kind":"module","full_name":"Procodile::CLI::CheckConcurrencyCommand","name":"CheckConcurrencyCommand"},{"html_id":"procodile/Procodile/CLI/RunCommand","kind":"module","full_name":"Procodile::CLI::RunCommand","name":"RunCommand"},{"html_id":"procodile/Procodile/CLI/ExecCommand","kind":"module","full_name":"Procodile::CLI::ExecCommand","name":"ExecCommand"},{"html_id":"procodile/Procodile/CLI/StopCommand","kind":"module","full_name":"Procodile::CLI::StopCommand","name":"StopCommand"},{"html_id":"procodile/Procodile/CLI/StartCommand","kind":"module","full_name":"Procodile::CLI::StartCommand","name":"StartCommand"},{"html_id":"procodile/Procodile/CLI/KillCommand","kind":"module","full_name":"Procodile::CLI::KillCommand","name":"KillCommand"},{"html_id":"procodile/Procodile/CLI/HelpCommand","kind":"module","full_name":"Procodile::CLI::HelpCommand","name":"HelpCommand"},{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/cli.cr","line_number":7,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L7"},{"filename":"src/procodile/commands/check_concurrency_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/check_concurrency_command.cr#L2"},{"filename":"src/procodile/commands/console_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/console_command.cr#L2"},{"filename":"src/procodile/commands/exec_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/exec_command.cr#L2"},{"filename":"src/procodile/commands/help_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/help_command.cr#L2"},{"filename":"src/procodile/commands/kill_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/kill_command.cr#L2"},{"filename":"src/procodile/commands/log_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/log_command.cr#L2"},{"filename":"src/procodile/commands/restart_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/restart_command.cr#L2"},{"filename":"src/procodile/commands/run_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/run_command.cr#L2"},{"filename":"src/procodile/commands/start_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/start_command.cr#L2"},{"filename":"src/procodile/commands/status_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/status_command.cr#L2"},{"filename":"src/procodile/commands/stop_command.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/stop_command.cr#L2"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"COMMANDS","name":"COMMANDS","value":"[{:help, \"Shows this help output\"}, {:kill, \"Forcefully kill all known processes\"}, {:start, \"Starts processes and/or the supervisor\"}, {:stop, \"Stops processes and/or the supervisor\"}, {:exec, \"Execute a command within the environment\"}, {:run, \"Execute a command within the environment\"}, {:check_concurrency, \"Check process concurrency\"}, {:log, \"Open/stream a Procodile log file\"}, {:restart, \"Restart processes\"}, {:status, \"Show the current status of processes\"}, {:console, \"Open a console within the environment\"}]"}],"included_modules":[{"html_id":"procodile/Procodile/CLI/CheckConcurrencyCommand","kind":"module","full_name":"Procodile::CLI::CheckConcurrencyCommand","name":"CheckConcurrencyCommand"},{"html_id":"procodile/Procodile/CLI/ConsoleCommand","kind":"module","full_name":"Procodile::CLI::ConsoleCommand","name":"ConsoleCommand"},{"html_id":"procodile/Procodile/CLI/ExecCommand","kind":"module","full_name":"Procodile::CLI::ExecCommand","name":"ExecCommand"},{"html_id":"procodile/Procodile/CLI/HelpCommand","kind":"module","full_name":"Procodile::CLI::HelpCommand","name":"HelpCommand"},{"html_id":"procodile/Procodile/CLI/KillCommand","kind":"module","full_name":"Procodile::CLI::KillCommand","name":"KillCommand"},{"html_id":"procodile/Procodile/CLI/LogCommand","kind":"module","full_name":"Procodile::CLI::LogCommand","name":"LogCommand"},{"html_id":"procodile/Procodile/CLI/RestartCommand","kind":"module","full_name":"Procodile::CLI::RestartCommand","name":"RestartCommand"},{"html_id":"procodile/Procodile/CLI/RunCommand","kind":"module","full_name":"Procodile::CLI::RunCommand","name":"RunCommand"},{"html_id":"procodile/Procodile/CLI/StartCommand","kind":"module","full_name":"Procodile::CLI::StartCommand","name":"StartCommand"},{"html_id":"procodile/Procodile/CLI/StatusCommand","kind":"module","full_name":"Procodile::CLI::StatusCommand","name":"StatusCommand"},{"html_id":"procodile/Procodile/CLI/StopCommand","kind":"module","full_name":"Procodile::CLI::StopCommand","name":"StopCommand"}],"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"},"class_methods":[{"html_id":"commands:Hash(String,Command)-class-method","name":"commands","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":24,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L24"},"def":{"name":"commands","return_type":"Hash(String, Command)","visibility":"Public","body":"if (__temp_1 = @@commands).nil?\n  @@commands = ({} of String => Command)\nelse\n  __temp_1\nend"}}],"constructors":[{"html_id":"new(config:Config)-class-method","name":"new","abstract":false,"args":[{"name":"config","external_name":"config","restriction":"Config"}],"args_string":"(config : Config)","args_html":"(config : <a href=\"../Procodile/Config.html\">Config</a>)","location":{"filename":"src/procodile/cli.cr","line_number":28,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L28"},"def":{"name":"new","args":[{"name":"config","external_name":"config","restriction":"Config"}],"visibility":"Public","body":"_ = allocate\n_.initialize(config)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"config:Config-instance-method","name":"config","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":21,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L21"},"def":{"name":"config","return_type":"Config","visibility":"Public","body":"@config"}},{"html_id":"config=(config:Config)-instance-method","name":"config=","abstract":false,"args":[{"name":"config","external_name":"config","restriction":"Config"}],"args_string":"(config : Config)","args_html":"(config : <a href=\"../Procodile/Config.html\">Config</a>)","location":{"filename":"src/procodile/cli.cr","line_number":21,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L21"},"def":{"name":"config=","args":[{"name":"config","external_name":"config","restriction":"Config"}],"visibility":"Public","body":"@config = config"}},{"html_id":"dispatch(command:String):Nil-instance-method","name":"dispatch","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String"}],"args_string":"(command : String) : Nil","args_html":"(command : String) : Nil","location":{"filename":"src/procodile/cli.cr","line_number":49,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L49"},"def":{"name":"dispatch","args":[{"name":"command","external_name":"command","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"if self.class.commands.has_key?(command)\n  self.class.commands[command].callable.call\nelse\n  raise(Error.new(\"Invalid command '#{command}'\"))\nend"}},{"html_id":"options:Options-instance-method","name":"options","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":22,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L22"},"def":{"name":"options","return_type":"Options","visibility":"Public","body":"@options"}},{"html_id":"options=(options:Options)-instance-method","name":"options=","abstract":false,"args":[{"name":"options","external_name":"options","restriction":"Options"}],"args_string":"(options : Options)","args_html":"(options : <a href=\"../Procodile/CLI/Options.html\">Options</a>)","location":{"filename":"src/procodile/cli.cr","line_number":22,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L22"},"def":{"name":"options=","args":[{"name":"options","external_name":"options","restriction":"Options"}],"visibility":"Public","body":"@options = options"}}],"types":[{"html_id":"procodile/Procodile/CLI/CheckConcurrencyCommand","path":"Procodile/CLI/CheckConcurrencyCommand.html","kind":"module","full_name":"Procodile::CLI::CheckConcurrencyCommand","name":"CheckConcurrencyCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/check_concurrency_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/check_concurrency_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}},{"html_id":"procodile/Procodile/CLI/Command","path":"Procodile/CLI/Command.html","kind":"struct","full_name":"Procodile::CLI::Command","name":"Command","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/cli.cr","line_number":89,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L89"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"},"constructors":[{"html_id":"new(name:String,description:String,options:Proc(OptionParser,CLI,Nil),callable:Proc(Nil))-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"description","external_name":"description","restriction":"String"},{"name":"options","external_name":"options","restriction":"Proc(OptionParser, CLI, Nil)"},{"name":"callable","external_name":"callable","restriction":"Proc(Nil)"}],"args_string":"(name : String, description : String, options : Proc(OptionParser, CLI, Nil), callable : Proc(Nil))","args_html":"(name : String, description : String, options : Proc(OptionParser, <a href=\"../../Procodile/CLI.html\">CLI</a>, Nil), callable : Proc(Nil))","location":{"filename":"src/procodile/cli.cr","line_number":95,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L95"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"description","external_name":"description","restriction":"String"},{"name":"options","external_name":"options","restriction":"Proc(OptionParser, CLI, Nil)"},{"name":"callable","external_name":"callable","restriction":"Proc(Nil)"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, description, options, callable)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"callable:Proc(Nil)-instance-method","name":"callable","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":93,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L93"},"def":{"name":"callable","return_type":"Proc(Nil)","visibility":"Public","body":"@callable"}},{"html_id":"description:String-instance-method","name":"description","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":91,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L91"},"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":90,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L90"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"options:Proc(OptionParser,CLI,Nil)-instance-method","name":"options","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":92,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L92"},"def":{"name":"options","return_type":"Proc(OptionParser, CLI, Nil)","visibility":"Public","body":"@options"}}]},{"html_id":"procodile/Procodile/CLI/ConsoleCommand","path":"Procodile/CLI/ConsoleCommand.html","kind":"module","full_name":"Procodile::CLI::ConsoleCommand","name":"ConsoleCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/console_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/console_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}},{"html_id":"procodile/Procodile/CLI/ExecCommand","path":"Procodile/CLI/ExecCommand.html","kind":"module","full_name":"Procodile::CLI::ExecCommand","name":"ExecCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/exec_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/exec_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}},{"html_id":"procodile/Procodile/CLI/HelpCommand","path":"Procodile/CLI/HelpCommand.html","kind":"module","full_name":"Procodile::CLI::HelpCommand","name":"HelpCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/help_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/help_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}},{"html_id":"procodile/Procodile/CLI/KillCommand","path":"Procodile/CLI/KillCommand.html","kind":"module","full_name":"Procodile::CLI::KillCommand","name":"KillCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/kill_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/kill_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}},{"html_id":"procodile/Procodile/CLI/LogCommand","path":"Procodile/CLI/LogCommand.html","kind":"module","full_name":"Procodile::CLI::LogCommand","name":"LogCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/log_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/log_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}},{"html_id":"procodile/Procodile/CLI/Options","path":"Procodile/CLI/Options.html","kind":"struct","full_name":"Procodile::CLI::Options","name":"Options","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/cli.cr","line_number":104,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L104"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":125,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L125"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"clean=(clean:Bool|Nil)-instance-method","name":"clean=","abstract":false,"args":[{"name":"clean","external_name":"clean","restriction":"Bool | ::Nil"}],"args_string":"(clean : Bool | Nil)","args_html":"(clean : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":112,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L112"},"def":{"name":"clean=","args":[{"name":"clean","external_name":"clean","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@clean = clean"}},{"html_id":"clean?:Bool|Nil-instance-method","name":"clean?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":112,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L112"},"def":{"name":"clean?","return_type":"Bool | ::Nil","visibility":"Public","body":"@clean"}},{"html_id":"follow=(follow:Bool|Nil)-instance-method","name":"follow=","abstract":false,"args":[{"name":"follow","external_name":"follow","restriction":"Bool | ::Nil"}],"args_string":"(follow : Bool | Nil)","args_html":"(follow : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":113,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L113"},"def":{"name":"follow=","args":[{"name":"follow","external_name":"follow","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@follow = follow"}},{"html_id":"follow?:Bool|Nil-instance-method","name":"follow?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":113,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L113"},"def":{"name":"follow?","return_type":"Bool | ::Nil","visibility":"Public","body":"@follow"}},{"html_id":"foreground=(foreground:Bool|Nil)-instance-method","name":"foreground=","abstract":false,"args":[{"name":"foreground","external_name":"foreground","restriction":"Bool | ::Nil"}],"args_string":"(foreground : Bool | Nil)","args_html":"(foreground : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":105,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L105"},"def":{"name":"foreground=","args":[{"name":"foreground","external_name":"foreground","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@foreground = foreground"}},{"html_id":"foreground?:Bool|Nil-instance-method","name":"foreground?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":105,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L105"},"def":{"name":"foreground?","return_type":"Bool | ::Nil","visibility":"Public","body":"@foreground"}},{"html_id":"json=(json:Bool|Nil)-instance-method","name":"json=","abstract":false,"args":[{"name":"json","external_name":"json","restriction":"Bool | ::Nil"}],"args_string":"(json : Bool | Nil)","args_html":"(json : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":109,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L109"},"def":{"name":"json=","args":[{"name":"json","external_name":"json","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@json = json"}},{"html_id":"json?:Bool|Nil-instance-method","name":"json?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":109,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L109"},"def":{"name":"json?","return_type":"Bool | ::Nil","visibility":"Public","body":"@json"}},{"html_id":"json_pretty=(json_pretty:Bool|Nil)-instance-method","name":"json_pretty=","abstract":false,"args":[{"name":"json_pretty","external_name":"json_pretty","restriction":"Bool | ::Nil"}],"args_string":"(json_pretty : Bool | Nil)","args_html":"(json_pretty : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":110,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L110"},"def":{"name":"json_pretty=","args":[{"name":"json_pretty","external_name":"json_pretty","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@json_pretty = json_pretty"}},{"html_id":"json_pretty?:Bool|Nil-instance-method","name":"json_pretty?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":110,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L110"},"def":{"name":"json_pretty?","return_type":"Bool | ::Nil","visibility":"Public","body":"@json_pretty"}},{"html_id":"lines:Int32|Nil-instance-method","name":"lines","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":122,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L122"},"def":{"name":"lines","return_type":"Int32 | ::Nil","visibility":"Public","body":"@lines"}},{"html_id":"lines=(lines:Int32|Nil)-instance-method","name":"lines=","abstract":false,"args":[{"name":"lines","external_name":"lines","restriction":"Int32 | ::Nil"}],"args_string":"(lines : Int32 | Nil)","args_html":"(lines : Int32 | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":122,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L122"},"def":{"name":"lines=","args":[{"name":"lines","external_name":"lines","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@lines = lines"}},{"html_id":"port_allocations:Hash(String,Int32)|Nil-instance-method","name":"port_allocations","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":120,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L120"},"def":{"name":"port_allocations","return_type":"Hash(String, Int32) | ::Nil","visibility":"Public","body":"@port_allocations"}},{"html_id":"port_allocations=(port_allocations:Hash(String,Int32)|Nil)-instance-method","name":"port_allocations=","abstract":false,"args":[{"name":"port_allocations","external_name":"port_allocations","restriction":"Hash(String, Int32) | ::Nil"}],"args_string":"(port_allocations : Hash(String, Int32) | Nil)","args_html":"(port_allocations : Hash(String, Int32) | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":120,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L120"},"def":{"name":"port_allocations=","args":[{"name":"port_allocations","external_name":"port_allocations","restriction":"Hash(String, Int32) | ::Nil"}],"visibility":"Public","body":"@port_allocations = port_allocations"}},{"html_id":"process:String|Nil-instance-method","name":"process","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":123,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L123"},"def":{"name":"process","return_type":"String | ::Nil","visibility":"Public","body":"@process"}},{"html_id":"process=(process:String|Nil)-instance-method","name":"process=","abstract":false,"args":[{"name":"process","external_name":"process","restriction":"String | ::Nil"}],"args_string":"(process : String | Nil)","args_html":"(process : String | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":123,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L123"},"def":{"name":"process=","args":[{"name":"process","external_name":"process","restriction":"String | ::Nil"}],"visibility":"Public","body":"@process = process"}},{"html_id":"processes:String|Nil-instance-method","name":"processes","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":121,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L121"},"def":{"name":"processes","return_type":"String | ::Nil","visibility":"Public","body":"@processes"}},{"html_id":"processes=(processes:String|Nil)-instance-method","name":"processes=","abstract":false,"args":[{"name":"processes","external_name":"processes","restriction":"String | ::Nil"}],"args_string":"(processes : String | Nil)","args_html":"(processes : String | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":121,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L121"},"def":{"name":"processes=","args":[{"name":"processes","external_name":"processes","restriction":"String | ::Nil"}],"visibility":"Public","body":"@processes = processes"}},{"html_id":"proxy=(proxy:Bool|Nil)-instance-method","name":"proxy=","abstract":false,"args":[{"name":"proxy","external_name":"proxy","restriction":"Bool | ::Nil"}],"args_string":"(proxy : Bool | Nil)","args_html":"(proxy : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":108,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L108"},"def":{"name":"proxy=","args":[{"name":"proxy","external_name":"proxy","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@proxy = proxy"}},{"html_id":"proxy?:Bool|Nil-instance-method","name":"proxy?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":108,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L108"},"def":{"name":"proxy?","return_type":"Bool | ::Nil","visibility":"Public","body":"@proxy"}},{"html_id":"reload=(reload:Bool|Nil)-instance-method","name":"reload=","abstract":false,"args":[{"name":"reload","external_name":"reload","restriction":"Bool | ::Nil"}],"args_string":"(reload : Bool | Nil)","args_html":"(reload : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":118,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L118"},"def":{"name":"reload=","args":[{"name":"reload","external_name":"reload","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@reload = reload"}},{"html_id":"reload?:Bool|Nil-instance-method","name":"reload?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":118,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L118"},"def":{"name":"reload?","return_type":"Bool | ::Nil","visibility":"Public","body":"@reload"}},{"html_id":"respawn=(respawn:Bool|Nil)-instance-method","name":"respawn=","abstract":false,"args":[{"name":"respawn","external_name":"respawn","restriction":"Bool | ::Nil"}],"args_string":"(respawn : Bool | Nil)","args_html":"(respawn : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":106,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L106"},"def":{"name":"respawn=","args":[{"name":"respawn","external_name":"respawn","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@respawn = respawn"}},{"html_id":"respawn?:Bool|Nil-instance-method","name":"respawn?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":106,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L106"},"def":{"name":"respawn?","return_type":"Bool | ::Nil","visibility":"Public","body":"@respawn"}},{"html_id":"simple=(simple:Bool|Nil)-instance-method","name":"simple=","abstract":false,"args":[{"name":"simple","external_name":"simple","restriction":"Bool | ::Nil"}],"args_string":"(simple : Bool | Nil)","args_html":"(simple : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":111,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L111"},"def":{"name":"simple=","args":[{"name":"simple","external_name":"simple","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@simple = simple"}},{"html_id":"simple?:Bool|Nil-instance-method","name":"simple?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":111,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L111"},"def":{"name":"simple?","return_type":"Bool | ::Nil","visibility":"Public","body":"@simple"}},{"html_id":"start_processes=(start_processes:Bool|Nil)-instance-method","name":"start_processes=","abstract":false,"args":[{"name":"start_processes","external_name":"start_processes","restriction":"Bool | ::Nil"}],"args_string":"(start_processes : Bool | Nil)","args_html":"(start_processes : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":115,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L115"},"def":{"name":"start_processes=","args":[{"name":"start_processes","external_name":"start_processes","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@start_processes = start_processes"}},{"html_id":"start_processes?:Bool|Nil-instance-method","name":"start_processes?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":115,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L115"},"def":{"name":"start_processes?","return_type":"Bool | ::Nil","visibility":"Public","body":"@start_processes"}},{"html_id":"start_supervisor=(start_supervisor:Bool|Nil)-instance-method","name":"start_supervisor=","abstract":false,"args":[{"name":"start_supervisor","external_name":"start_supervisor","restriction":"Bool | ::Nil"}],"args_string":"(start_supervisor : Bool | Nil)","args_html":"(start_supervisor : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":114,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L114"},"def":{"name":"start_supervisor=","args":[{"name":"start_supervisor","external_name":"start_supervisor","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@start_supervisor = start_supervisor"}},{"html_id":"start_supervisor?:Bool|Nil-instance-method","name":"start_supervisor?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":114,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L114"},"def":{"name":"start_supervisor?","return_type":"Bool | ::Nil","visibility":"Public","body":"@start_supervisor"}},{"html_id":"stop_supervisor=(stop_supervisor:Bool|Nil)-instance-method","name":"stop_supervisor=","abstract":false,"args":[{"name":"stop_supervisor","external_name":"stop_supervisor","restriction":"Bool | ::Nil"}],"args_string":"(stop_supervisor : Bool | Nil)","args_html":"(stop_supervisor : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":116,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L116"},"def":{"name":"stop_supervisor=","args":[{"name":"stop_supervisor","external_name":"stop_supervisor","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@stop_supervisor = stop_supervisor"}},{"html_id":"stop_supervisor?:Bool|Nil-instance-method","name":"stop_supervisor?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":116,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L116"},"def":{"name":"stop_supervisor?","return_type":"Bool | ::Nil","visibility":"Public","body":"@stop_supervisor"}},{"html_id":"stop_when_none=(stop_when_none:Bool|Nil)-instance-method","name":"stop_when_none=","abstract":false,"args":[{"name":"stop_when_none","external_name":"stop_when_none","restriction":"Bool | ::Nil"}],"args_string":"(stop_when_none : Bool | Nil)","args_html":"(stop_when_none : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":107,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L107"},"def":{"name":"stop_when_none=","args":[{"name":"stop_when_none","external_name":"stop_when_none","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@stop_when_none = stop_when_none"}},{"html_id":"stop_when_none?:Bool|Nil-instance-method","name":"stop_when_none?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":107,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L107"},"def":{"name":"stop_when_none?","return_type":"Bool | ::Nil","visibility":"Public","body":"@stop_when_none"}},{"html_id":"tag:String|Nil-instance-method","name":"tag","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":119,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L119"},"def":{"name":"tag","return_type":"String | ::Nil","visibility":"Public","body":"@tag"}},{"html_id":"tag=(tag:String|Nil)-instance-method","name":"tag=","abstract":false,"args":[{"name":"tag","external_name":"tag","restriction":"String | ::Nil"}],"args_string":"(tag : String | Nil)","args_html":"(tag : String | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":119,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L119"},"def":{"name":"tag=","args":[{"name":"tag","external_name":"tag","restriction":"String | ::Nil"}],"visibility":"Public","body":"@tag = tag"}},{"html_id":"wait_until_supervisor_stopped=(wait_until_supervisor_stopped:Bool|Nil)-instance-method","name":"wait_until_supervisor_stopped=","abstract":false,"args":[{"name":"wait_until_supervisor_stopped","external_name":"wait_until_supervisor_stopped","restriction":"Bool | ::Nil"}],"args_string":"(wait_until_supervisor_stopped : Bool | Nil)","args_html":"(wait_until_supervisor_stopped : Bool | Nil)","location":{"filename":"src/procodile/cli.cr","line_number":117,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L117"},"def":{"name":"wait_until_supervisor_stopped=","args":[{"name":"wait_until_supervisor_stopped","external_name":"wait_until_supervisor_stopped","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@wait_until_supervisor_stopped = wait_until_supervisor_stopped"}},{"html_id":"wait_until_supervisor_stopped?:Bool|Nil-instance-method","name":"wait_until_supervisor_stopped?","abstract":false,"location":{"filename":"src/procodile/cli.cr","line_number":117,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/cli.cr#L117"},"def":{"name":"wait_until_supervisor_stopped?","return_type":"Bool | ::Nil","visibility":"Public","body":"@wait_until_supervisor_stopped"}}]},{"html_id":"procodile/Procodile/CLI/RestartCommand","path":"Procodile/CLI/RestartCommand.html","kind":"module","full_name":"Procodile::CLI::RestartCommand","name":"RestartCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/restart_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/restart_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}},{"html_id":"procodile/Procodile/CLI/RunCommand","path":"Procodile/CLI/RunCommand.html","kind":"module","full_name":"Procodile::CLI::RunCommand","name":"RunCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/run_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/run_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}},{"html_id":"procodile/Procodile/CLI/StartCommand","path":"Procodile/CLI/StartCommand.html","kind":"module","full_name":"Procodile::CLI::StartCommand","name":"StartCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/start_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/start_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}},{"html_id":"procodile/Procodile/CLI/StatusCommand","path":"Procodile/CLI/StatusCommand.html","kind":"module","full_name":"Procodile::CLI::StatusCommand","name":"StatusCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/status_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/status_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}},{"html_id":"procodile/Procodile/CLI/StopCommand","path":"Procodile/CLI/StopCommand.html","kind":"module","full_name":"Procodile::CLI::StopCommand","name":"StopCommand","abstract":false,"locations":[{"filename":"src/procodile/commands/stop_command.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/commands/stop_command.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"including_types":[{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}],"namespace":{"html_id":"procodile/Procodile/CLI","kind":"class","full_name":"Procodile::CLI","name":"CLI"}}]},{"html_id":"procodile/Procodile/Config","path":"Procodile/Config.html","kind":"class","full_name":"Procodile::Config","name":"Config","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/config.cr","line_number":4,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L4"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"COLORS","name":"COLORS","value":"[Colorize::ColorANSI::Magenta, Colorize::ColorANSI::Red, Colorize::ColorANSI::Cyan, Colorize::ColorANSI::Green, Colorize::ColorANSI::Yellow, Colorize::ColorANSI::Blue]"}],"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"},"constructors":[{"html_id":"new(root:String,procfile:String|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"root","external_name":"root","restriction":"String"},{"name":"procfile","default_value":"nil","external_name":"procfile","restriction":"String | ::Nil"}],"args_string":"(root : String, procfile : String | Nil = nil)","args_html":"(root : String, procfile : String | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/procodile/config.cr","line_number":37,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L37"},"def":{"name":"new","args":[{"name":"root","external_name":"root","restriction":"String"},{"name":"procfile","default_value":"nil","external_name":"procfile","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(root, procfile)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"app_name:String-instance-method","name":"app_name","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":25,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L25"},"def":{"name":"app_name","return_type":"String","visibility":"Public","body":"if (__temp_1 = @app_name).nil?\n  @app_name = ((local_options.app_name || options.app_name) || \"Procodile\")\nelse\n  __temp_1\nend"}},{"html_id":"console_command:String|Nil-instance-method","name":"console_command","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":112,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L112"},"def":{"name":"console_command","return_type":"String | ::Nil","visibility":"Public","body":"local_options.console_command || options.console_command"}},{"html_id":"environment_variables:Hash(String,String)-instance-method","name":"environment_variables","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":30,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L30"},"def":{"name":"environment_variables","return_type":"Hash(String, String)","visibility":"Public","body":"if (__temp_1 = @environment_variables).nil?\n  @environment_variables = (begin\n    option_env = options.env || ({} of String => String)\n    local_option_env = local_options.env || ({} of String => String)\n    option_env.merge(local_option_env)\n  end)\nelse\n  __temp_1\nend"}},{"html_id":"exec_prefix:String|Nil-instance-method","name":"exec_prefix","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":116,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L116"},"def":{"name":"exec_prefix","return_type":"String | ::Nil","visibility":"Public","body":"local_options.exec_prefix || options.exec_prefix"}},{"html_id":"loaded_at:Time|Nil-instance-method","name":"loaded_at","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":28,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L28"},"def":{"name":"loaded_at","return_type":"Time | ::Nil","visibility":"Public","body":"@loaded_at"}},{"html_id":"local_options:Config::Option-instance-method","name":"local_options","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":18,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L18"},"def":{"name":"local_options","return_type":"Config::Option","visibility":"Public","body":"if (__temp_1 = @local_options).nil?\n  @local_options = (load_local_options_from_file)\nelse\n  __temp_1\nend"}},{"html_id":"local_options_path:String-instance-method","name":"local_options_path","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":165,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L165"},"def":{"name":"local_options_path","return_type":"String","visibility":"Public","body":"\"#{procfile_path}.local\""}},{"html_id":"local_process_options:Hash(String,Procodile::Process::Option)-instance-method","name":"local_process_options","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":22,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L22"},"def":{"name":"local_process_options","return_type":"Hash(String, Procodile::Process::Option)","visibility":"Public","body":"if (__temp_1 = @local_process_options).nil?\n  @local_process_options = (local_options.processes || ({} of String => Procodile::Process::Option))\nelse\n  __temp_1\nend"}},{"html_id":"log_path:String-instance-method","name":"log_path","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":135,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L135"},"def":{"name":"log_path","return_type":"String","visibility":"Public","body":"log_path = local_options.log_path || options.log_path\nif log_path\n  File.expand_path(log_path, self.root)\nelse\n  if log_path.nil? && (log_root = self.log_root)\n    File.join(log_root, \"procodile.log\")\n  else\n    File.expand_path(\"procodile.log\", self.root)\n  end\nend\n"}},{"html_id":"log_root:String|Nil-instance-method","name":"log_root","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":147,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L147"},"def":{"name":"log_root","return_type":"String | ::Nil","visibility":"Public","body":"log_root = local_options.log_root || options.log_root\nif log_root\n  File.expand_path(log_root, self.root)\nend\n"}},{"html_id":"options:Config::Option-instance-method","name":"options","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":17,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L17"},"def":{"name":"options","return_type":"Config::Option","visibility":"Public","body":"if (__temp_1 = @options).nil?\n  @options = (load_options_from_file)\nelse\n  __temp_1\nend"}},{"html_id":"options_for_process(name:String):Procodile::Process::Option-instance-method","name":"options_for_process","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String) : Procodile::Process::Option","args_html":"(name : String) : <a href=\"../Procodile/Process/Option.html\">Procodile::Process::Option</a>","location":{"filename":"src/procodile/config.cr","line_number":120,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L120"},"def":{"name":"options_for_process","args":[{"name":"name","external_name":"name","restriction":"String"}],"return_type":"Procodile::Process::Option","visibility":"Public","body":"po = process_options[name]? || Procodile::Process::Option.new\nlocal_po = local_process_options[name]? || Procodile::Process::Option.new\npo.merge(local_po)\n"}},{"html_id":"options_path:String-instance-method","name":"options_path","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":161,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L161"},"def":{"name":"options_path","return_type":"String","visibility":"Public","body":"\"#{procfile_path}.options\""}},{"html_id":"pid_root:String|Nil-instance-method","name":"pid_root","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":127,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L127"},"def":{"name":"pid_root","return_type":"String | ::Nil","visibility":"Public","body":"File.expand_path((local_options.pid_root || options.pid_root) || \"pids\", self.root)"}},{"html_id":"process_list:Hash(String,String)-instance-method","name":"process_list","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":14,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L14"},"def":{"name":"process_list","return_type":"Hash(String, String)","visibility":"Public","body":"if (__temp_1 = @process_list).nil?\n  @process_list = (load_process_list_from_file)\nelse\n  __temp_1\nend"}},{"html_id":"process_options:Hash(String,Procodile::Process::Option)-instance-method","name":"process_options","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":19,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L19"},"def":{"name":"process_options","return_type":"Hash(String, Procodile::Process::Option)","visibility":"Public","body":"if (__temp_1 = @process_options).nil?\n  @process_options = (options.processes || ({} of String => Procodile::Process::Option))\nelse\n  __temp_1\nend"}},{"html_id":"processes:Hash(String,Procodile::Process)-instance-method","name":"processes","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":15,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L15"},"def":{"name":"processes","return_type":"Hash(String, Procodile::Process)","visibility":"Public","body":"if (__temp_1 = @processes).nil?\n  @processes = ({} of String => Procodile::Process)\nelse\n  __temp_1\nend"}},{"html_id":"procfile_path:String-instance-method","name":"procfile_path","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":157,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L157"},"def":{"name":"procfile_path","return_type":"String","visibility":"Public","body":"@procfile || (File.join(self.root, \"Procfile\"))"}},{"html_id":"reload:Nil-instance-method","name":"reload","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":64,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L64"},"def":{"name":"reload","return_type":"Nil","visibility":"Public","body":"@options = nil\n@local_options = nil\n@process_options = nil\n@local_process_options = nil\n@process_list = nil\n@environment_variables = nil\n@loaded_at = nil\nif (processes = @processes)\n  process_list.each do |name, command|\n    if (process = processes[name]?)\n      process.removed = false\n      if process.command != command\n        process.command = command\n        Procodile.log(nil, \"system\", \"#{name} command has changed. Updated.\")\n      end\n      process.options = options_for_process(name)\n    else\n      Procodile.log(nil, \"system\", \"#{name} has been added to the Procfile. Adding it.\")\n      processes[name] = create_process(name, command, COLORS[(processes.size.divmod(COLORS.size))[1]])\n    end\n  end\n  removed_processes_name = processes.keys - process_list.keys\n  removed_processes_name.each do |process_name|\n    if (p = processes[process_name])\n      p.removed = true\n      processes.delete(process_name)\n      Procodile.log(nil, \"system\", \"#{process_name} has been removed in the Procfile. It will be removed when it is stopped.\")\n    end\n  end\nend\n@loaded_at = Time.local\n"}},{"html_id":"root:String-instance-method","name":"root","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":29,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L29"},"def":{"name":"root","return_type":"String","visibility":"Public","body":"@root"}},{"html_id":"sock_path:String-instance-method","name":"sock_path","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":153,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L153"},"def":{"name":"sock_path","return_type":"String","visibility":"Public","body":"File.join(pid_root, \"procodile.sock\")"}},{"html_id":"supervisor_pid_path:String-instance-method","name":"supervisor_pid_path","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":131,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L131"},"def":{"name":"supervisor_pid_path","return_type":"String","visibility":"Public","body":"File.join(pid_root, \"procodile.pid\")"}},{"html_id":"user:String|Nil-instance-method","name":"user","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":108,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L108"},"def":{"name":"user","return_type":"String | ::Nil","visibility":"Public","body":"local_options.user || options.user"}}],"types":[{"html_id":"procodile/Procodile/Config/GlobalOption","path":"Procodile/Config/GlobalOption.html","kind":"struct","full_name":"Procodile::Config::GlobalOption","name":"GlobalOption","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/config.cr","line_number":220,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L220"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"procodile/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"namespace":{"html_id":"procodile/Procodile/Config","kind":"class","full_name":"Procodile::Config","name":"Config"},"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/procodile/config.cr","line_number":221,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L221"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"}}],"instance_methods":[{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":223,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L223"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"name=(name:String)-instance-method","name":"name=","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"}],"args_string":"(name : String)","args_html":"(name : String)","location":{"filename":"src/procodile/config.cr","line_number":223,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L223"},"def":{"name":"name=","args":[{"name":"name","external_name":"name","restriction":"String"}],"visibility":"Public","body":"@name = name"}},{"html_id":"procfile:String|Nil-instance-method","name":"procfile","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":225,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L225"},"def":{"name":"procfile","return_type":"String | ::Nil","visibility":"Public","body":"@procfile"}},{"html_id":"procfile=(procfile:String|Nil)-instance-method","name":"procfile=","abstract":false,"args":[{"name":"procfile","external_name":"procfile","restriction":"String | ::Nil"}],"args_string":"(procfile : String | Nil)","args_html":"(procfile : String | Nil)","location":{"filename":"src/procodile/config.cr","line_number":225,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L225"},"def":{"name":"procfile=","args":[{"name":"procfile","external_name":"procfile","restriction":"String | ::Nil"}],"visibility":"Public","body":"@procfile = procfile"}},{"html_id":"root:String-instance-method","name":"root","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":224,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L224"},"def":{"name":"root","return_type":"String","visibility":"Public","body":"@root"}},{"html_id":"root=(root:String)-instance-method","name":"root=","abstract":false,"args":[{"name":"root","external_name":"root","restriction":"String"}],"args_string":"(root : String)","args_html":"(root : String)","location":{"filename":"src/procodile/config.cr","line_number":224,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L224"},"def":{"name":"root=","args":[{"name":"root","external_name":"root","restriction":"String"}],"visibility":"Public","body":"@root = root"}}]},{"html_id":"procodile/Procodile/Config/Option","path":"Procodile/Config/Option.html","kind":"struct","full_name":"Procodile::Config::Option","name":"Option","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/config.cr","line_number":200,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L200"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"procodile/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"namespace":{"html_id":"procodile/Procodile/Config","kind":"class","full_name":"Procodile::Config","name":"Config"},"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/procodile/config.cr","line_number":201,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L201"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":216,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L216"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"app_id:Procodile::Process::Option|Nil-instance-method","name":"app_id","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":214,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L214"},"def":{"name":"app_id","return_type":"Procodile::Process::Option | ::Nil","visibility":"Public","body":"@app_id"}},{"html_id":"app_id=(app_id:Procodile::Process::Option|Nil)-instance-method","name":"app_id=","abstract":false,"args":[{"name":"app_id","external_name":"app_id","restriction":"Procodile::Process::Option | ::Nil"}],"args_string":"(app_id : Procodile::Process::Option | Nil)","args_html":"(app_id : <a href=\"../../Procodile/Process/Option.html\">Procodile::Process::Option</a> | Nil)","location":{"filename":"src/procodile/config.cr","line_number":214,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L214"},"def":{"name":"app_id=","args":[{"name":"app_id","external_name":"app_id","restriction":"Procodile::Process::Option | ::Nil"}],"visibility":"Public","body":"@app_id = app_id"}},{"html_id":"app_name:String|Nil-instance-method","name":"app_name","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":203,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L203"},"def":{"name":"app_name","return_type":"String | ::Nil","visibility":"Public","body":"@app_name"}},{"html_id":"app_name=(app_name:String|Nil)-instance-method","name":"app_name=","abstract":false,"args":[{"name":"app_name","external_name":"app_name","restriction":"String | ::Nil"}],"args_string":"(app_name : String | Nil)","args_html":"(app_name : String | Nil)","location":{"filename":"src/procodile/config.cr","line_number":203,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L203"},"def":{"name":"app_name=","args":[{"name":"app_name","external_name":"app_name","restriction":"String | ::Nil"}],"visibility":"Public","body":"@app_name = app_name"}},{"html_id":"console_command:String|Nil-instance-method","name":"console_command","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":210,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L210"},"def":{"name":"console_command","return_type":"String | ::Nil","visibility":"Public","body":"@console_command"}},{"html_id":"console_command=(console_command:String|Nil)-instance-method","name":"console_command=","abstract":false,"args":[{"name":"console_command","external_name":"console_command","restriction":"String | ::Nil"}],"args_string":"(console_command : String | Nil)","args_html":"(console_command : String | Nil)","location":{"filename":"src/procodile/config.cr","line_number":210,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L210"},"def":{"name":"console_command=","args":[{"name":"console_command","external_name":"console_command","restriction":"String | ::Nil"}],"visibility":"Public","body":"@console_command = console_command"}},{"html_id":"env:Hash(String,String)|Nil-instance-method","name":"env","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":212,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L212"},"def":{"name":"env","return_type":"Hash(String, String) | ::Nil","visibility":"Public","body":"@env"}},{"html_id":"env=(env:Hash(String,String)|Nil)-instance-method","name":"env=","abstract":false,"args":[{"name":"env","external_name":"env","restriction":"Hash(String, String) | ::Nil"}],"args_string":"(env : Hash(String, String) | Nil)","args_html":"(env : Hash(String, String) | Nil)","location":{"filename":"src/procodile/config.cr","line_number":212,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L212"},"def":{"name":"env=","args":[{"name":"env","external_name":"env","restriction":"Hash(String, String) | ::Nil"}],"visibility":"Public","body":"@env = env"}},{"html_id":"exec_prefix:String|Nil-instance-method","name":"exec_prefix","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":211,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L211"},"def":{"name":"exec_prefix","return_type":"String | ::Nil","visibility":"Public","body":"@exec_prefix"}},{"html_id":"exec_prefix=(exec_prefix:String|Nil)-instance-method","name":"exec_prefix=","abstract":false,"args":[{"name":"exec_prefix","external_name":"exec_prefix","restriction":"String | ::Nil"}],"args_string":"(exec_prefix : String | Nil)","args_html":"(exec_prefix : String | Nil)","location":{"filename":"src/procodile/config.cr","line_number":211,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L211"},"def":{"name":"exec_prefix=","args":[{"name":"exec_prefix","external_name":"exec_prefix","restriction":"String | ::Nil"}],"visibility":"Public","body":"@exec_prefix = exec_prefix"}},{"html_id":"log_path:String|Nil-instance-method","name":"log_path","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":207,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L207"},"def":{"name":"log_path","return_type":"String | ::Nil","visibility":"Public","body":"@log_path"}},{"html_id":"log_path=(log_path:String|Nil)-instance-method","name":"log_path=","abstract":false,"args":[{"name":"log_path","external_name":"log_path","restriction":"String | ::Nil"}],"args_string":"(log_path : String | Nil)","args_html":"(log_path : String | Nil)","location":{"filename":"src/procodile/config.cr","line_number":207,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L207"},"def":{"name":"log_path=","args":[{"name":"log_path","external_name":"log_path","restriction":"String | ::Nil"}],"visibility":"Public","body":"@log_path = log_path"}},{"html_id":"log_root:String|Nil-instance-method","name":"log_root","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":208,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L208"},"def":{"name":"log_root","return_type":"String | ::Nil","visibility":"Public","body":"@log_root"}},{"html_id":"log_root=(log_root:String|Nil)-instance-method","name":"log_root=","abstract":false,"args":[{"name":"log_root","external_name":"log_root","restriction":"String | ::Nil"}],"args_string":"(log_root : String | Nil)","args_html":"(log_root : String | Nil)","location":{"filename":"src/procodile/config.cr","line_number":208,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L208"},"def":{"name":"log_root=","args":[{"name":"log_root","external_name":"log_root","restriction":"String | ::Nil"}],"visibility":"Public","body":"@log_root = log_root"}},{"html_id":"pid_root:String|Nil-instance-method","name":"pid_root","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":206,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L206"},"def":{"name":"pid_root","return_type":"String | ::Nil","visibility":"Public","body":"@pid_root"}},{"html_id":"pid_root=(pid_root:String|Nil)-instance-method","name":"pid_root=","abstract":false,"args":[{"name":"pid_root","external_name":"pid_root","restriction":"String | ::Nil"}],"args_string":"(pid_root : String | Nil)","args_html":"(pid_root : String | Nil)","location":{"filename":"src/procodile/config.cr","line_number":206,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L206"},"def":{"name":"pid_root=","args":[{"name":"pid_root","external_name":"pid_root","restriction":"String | ::Nil"}],"visibility":"Public","body":"@pid_root = pid_root"}},{"html_id":"processes:Hash(String,Procodile::Process::Option)|Nil-instance-method","name":"processes","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":213,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L213"},"def":{"name":"processes","return_type":"Hash(String, Procodile::Process::Option) | ::Nil","visibility":"Public","body":"@processes"}},{"html_id":"processes=(processes:Hash(String,Procodile::Process::Option)|Nil)-instance-method","name":"processes=","abstract":false,"args":[{"name":"processes","external_name":"processes","restriction":"Hash(String, Procodile::Process::Option) | ::Nil"}],"args_string":"(processes : Hash(String, Procodile::Process::Option) | Nil)","args_html":"(processes : Hash(String, <a href=\"../../Procodile/Process/Option.html\">Procodile::Process::Option</a>) | Nil)","location":{"filename":"src/procodile/config.cr","line_number":213,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L213"},"def":{"name":"processes=","args":[{"name":"processes","external_name":"processes","restriction":"Hash(String, Procodile::Process::Option) | ::Nil"}],"visibility":"Public","body":"@processes = processes"}},{"html_id":"procfile:String|Nil-instance-method","name":"procfile","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":205,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L205"},"def":{"name":"procfile","return_type":"String | ::Nil","visibility":"Public","body":"@procfile"}},{"html_id":"procfile=(procfile:String|Nil)-instance-method","name":"procfile=","abstract":false,"args":[{"name":"procfile","external_name":"procfile","restriction":"String | ::Nil"}],"args_string":"(procfile : String | Nil)","args_html":"(procfile : String | Nil)","location":{"filename":"src/procodile/config.cr","line_number":205,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L205"},"def":{"name":"procfile=","args":[{"name":"procfile","external_name":"procfile","restriction":"String | ::Nil"}],"visibility":"Public","body":"@procfile = procfile"}},{"html_id":"root:String|Nil-instance-method","name":"root","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":204,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L204"},"def":{"name":"root","return_type":"String | ::Nil","visibility":"Public","body":"@root"}},{"html_id":"root=(root:String|Nil)-instance-method","name":"root=","abstract":false,"args":[{"name":"root","external_name":"root","restriction":"String | ::Nil"}],"args_string":"(root : String | Nil)","args_html":"(root : String | Nil)","location":{"filename":"src/procodile/config.cr","line_number":204,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L204"},"def":{"name":"root=","args":[{"name":"root","external_name":"root","restriction":"String | ::Nil"}],"visibility":"Public","body":"@root = root"}},{"html_id":"user:String|Nil-instance-method","name":"user","abstract":false,"location":{"filename":"src/procodile/config.cr","line_number":209,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L209"},"def":{"name":"user","return_type":"String | ::Nil","visibility":"Public","body":"@user"}},{"html_id":"user=(user:String|Nil)-instance-method","name":"user=","abstract":false,"args":[{"name":"user","external_name":"user","restriction":"String | ::Nil"}],"args_string":"(user : String | Nil)","args_html":"(user : String | Nil)","location":{"filename":"src/procodile/config.cr","line_number":209,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/config.cr#L209"},"def":{"name":"user=","args":[{"name":"user","external_name":"user","restriction":"String | ::Nil"}],"visibility":"Public","body":"@user = user"}}]}]},{"html_id":"procodile/Procodile/ControlClient","path":"Procodile/ControlClient.html","kind":"class","full_name":"Procodile::ControlClient","name":"ControlClient","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/control_client.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L2"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"},"class_methods":[{"html_id":"run(sock_path:String,command:String,**options):SocketResponse-class-method","name":"run","abstract":false,"args":[{"name":"sock_path","external_name":"sock_path","restriction":"String"},{"name":"command","external_name":"command","restriction":"String"}],"args_string":"(sock_path : String, command : String, **options) : SocketResponse","args_html":"(sock_path : String, command : String, **options) : <a href=\"../Procodile/ControlClient/SocketResponse.html\">SocketResponse</a>","location":{"filename":"src/procodile/control_client.cr","line_number":9,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L9"},"def":{"name":"run","args":[{"name":"sock_path","external_name":"sock_path","restriction":"String"},{"name":"command","external_name":"command","restriction":"String"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"SocketResponse","visibility":"Public","body":"begin\n  socket = self.new(sock_path)\n  socket.run(command, **options)\nensure\n  socket.try(&.disconnect)\nend"}}],"constructors":[{"html_id":"new(sock_path:String)-class-method","name":"new","abstract":false,"args":[{"name":"sock_path","external_name":"sock_path","restriction":"String"}],"args_string":"(sock_path : String)","args_html":"(sock_path : String)","location":{"filename":"src/procodile/control_client.cr","line_number":16,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L16"},"def":{"name":"new","args":[{"name":"sock_path","external_name":"sock_path","restriction":"String"}],"visibility":"Public","body":"_ = allocate\n_.initialize(sock_path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"disconnect:Nil-instance-method","name":"disconnect","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":49,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L49"},"def":{"name":"disconnect","return_type":"Nil","visibility":"Public","body":"@socket.try(&.close)"}},{"html_id":"run(command:String,**options):SocketResponse-instance-method","name":"run","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String"}],"args_string":"(command : String, **options) : SocketResponse","args_html":"(command : String, **options) : <a href=\"../Procodile/ControlClient/SocketResponse.html\">SocketResponse</a>","location":{"filename":"src/procodile/control_client.cr","line_number":20,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L20"},"def":{"name":"run","args":[{"name":"command","external_name":"command","restriction":"String"}],"double_splat":{"name":"options","external_name":"options","restriction":""},"return_type":"SocketResponse","visibility":"Public","body":"@socket.puts(\"#{command} #{options.to_json}\")\nif (data = @socket.gets)\n  code, reply = data.strip.split(/\\s+/, 2)\n  if ((code.to_i == 200) && reply) && !reply.empty?\n    case command\n    when \"start_processes\", \"stop\"\n      Array(Instance::Config).from_json(reply)\n    when \"restart\"\n      Array(Tuple(Instance::Config | ::Nil, Instance::Config | ::Nil)).from_json(reply)\n    when \"check_concurrency\"\n      NamedTuple(started: Array(Instance::Config), stopped: Array(Instance::Config)).from_json(reply)\n    when \"status\"\n      ControlClient::ReplyOfStatusCommand.from_json(reply)\n    else\n      true\n    end\n  else\n    raise(Error.new(\"Error from control server: #{code}: (#{reply.inspect})\"))\n  end\nelse\n  raise(Error.new(\"Control server disconnected. data: #{data.inspect}\"))\nend\n"}}],"types":[{"html_id":"procodile/Procodile/ControlClient/ProcessStatus","path":"Procodile/ControlClient/ProcessStatus.html","kind":"struct","full_name":"Procodile::ControlClient::ProcessStatus","name":"ProcessStatus","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/control_client.cr","line_number":54,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L54"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"procodile/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"procodile/Procodile/ControlClient","kind":"class","full_name":"Procodile::ControlClient","name":"ControlClient"},"constructors":[{"html_id":"new(name:String,log_color:Colorize::ColorANSI,quantity:Int32,max_respawns:Int32,respawn_window:Int32,command:String,restart_mode:Signal|String|Nil,log_path:String|Nil,removed:Bool,proxy_port:Int32|Nil,proxy_address:String|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"log_color","external_name":"log_color","restriction":"Colorize::ColorANSI"},{"name":"quantity","external_name":"quantity","restriction":"Int32"},{"name":"max_respawns","external_name":"max_respawns","restriction":"Int32"},{"name":"respawn_window","external_name":"respawn_window","restriction":"Int32"},{"name":"command","external_name":"command","restriction":"String"},{"name":"restart_mode","external_name":"restart_mode","restriction":"Signal | String | Nil"},{"name":"log_path","external_name":"log_path","restriction":"String | ::Nil"},{"name":"removed","external_name":"removed","restriction":"Bool"},{"name":"proxy_port","external_name":"proxy_port","restriction":"Int32 | ::Nil"},{"name":"proxy_address","external_name":"proxy_address","restriction":"String | ::Nil"}],"args_string":"(name : String, log_color : Colorize::ColorANSI, quantity : Int32, max_respawns : Int32, respawn_window : Int32, command : String, restart_mode : Signal | String | Nil, log_path : String | Nil, removed : Bool, proxy_port : Int32 | Nil, proxy_address : String | Nil)","args_html":"(name : String, log_color : Colorize::ColorANSI, quantity : Int32, max_respawns : Int32, respawn_window : Int32, command : String, restart_mode : Signal | String | Nil, log_path : String | Nil, removed : Bool, proxy_port : Int32 | Nil, proxy_address : String | Nil)","location":{"filename":"src/procodile/control_client.cr","line_number":69,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L69"},"def":{"name":"new","args":[{"name":"name","external_name":"name","restriction":"String"},{"name":"log_color","external_name":"log_color","restriction":"Colorize::ColorANSI"},{"name":"quantity","external_name":"quantity","restriction":"Int32"},{"name":"max_respawns","external_name":"max_respawns","restriction":"Int32"},{"name":"respawn_window","external_name":"respawn_window","restriction":"Int32"},{"name":"command","external_name":"command","restriction":"String"},{"name":"restart_mode","external_name":"restart_mode","restriction":"Signal | String | Nil"},{"name":"log_path","external_name":"log_path","restriction":"String | ::Nil"},{"name":"removed","external_name":"removed","restriction":"Bool"},{"name":"proxy_port","external_name":"proxy_port","restriction":"Int32 | ::Nil"},{"name":"proxy_address","external_name":"proxy_address","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(name, log_color, quantity, max_respawns, respawn_window, command, restart_mode, log_path, removed, proxy_port, proxy_address)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/procodile/control_client.cr","line_number":55,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L55"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"command:String-instance-method","name":"command","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":62,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L62"},"def":{"name":"command","return_type":"String","visibility":"Public","body":"@command"}},{"html_id":"log_color:Colorize::ColorANSI-instance-method","name":"log_color","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":58,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L58"},"def":{"name":"log_color","return_type":"Colorize::ColorANSI","visibility":"Public","body":"@log_color"}},{"html_id":"log_path:String|Nil-instance-method","name":"log_path","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":64,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L64"},"def":{"name":"log_path","return_type":"String | ::Nil","visibility":"Public","body":"@log_path"}},{"html_id":"max_respawns:Int32-instance-method","name":"max_respawns","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":60,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L60"},"def":{"name":"max_respawns","return_type":"Int32","visibility":"Public","body":"@max_respawns"}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":57,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L57"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"proxy_address:String|Nil-instance-method","name":"proxy_address","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":67,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L67"},"def":{"name":"proxy_address","return_type":"String | ::Nil","visibility":"Public","body":"@proxy_address"}},{"html_id":"proxy_port:Int32|Nil-instance-method","name":"proxy_port","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":66,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L66"},"def":{"name":"proxy_port","return_type":"Int32 | ::Nil","visibility":"Public","body":"@proxy_port"}},{"html_id":"quantity:Int32-instance-method","name":"quantity","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":59,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L59"},"def":{"name":"quantity","return_type":"Int32","visibility":"Public","body":"@quantity"}},{"html_id":"removed?:Bool-instance-method","name":"removed?","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":65,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L65"},"def":{"name":"removed?","return_type":"Bool","visibility":"Public","body":"@removed"}},{"html_id":"respawn_window:Int32-instance-method","name":"respawn_window","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":61,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L61"},"def":{"name":"respawn_window","return_type":"Int32","visibility":"Public","body":"@respawn_window"}},{"html_id":"restart_mode:Signal|String|Nil-instance-method","name":"restart_mode","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":63,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L63"},"def":{"name":"restart_mode","return_type":"Signal | String | Nil","visibility":"Public","body":"@restart_mode"}}]},{"html_id":"procodile/Procodile/ControlClient/ReplyOfStatusCommand","path":"Procodile/ControlClient/ReplyOfStatusCommand.html","kind":"struct","full_name":"Procodile::ControlClient::ReplyOfStatusCommand","name":"ReplyOfStatusCommand","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/control_client.cr","line_number":86,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L86"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"procodile/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"procodile/Procodile/ControlClient","kind":"class","full_name":"Procodile::ControlClient","name":"ControlClient"},"doc":"Reply of `procodile status`","summary":"<p>Reply of <code>procodile status</code></p>","constructors":[{"html_id":"new(version:String,messages:Array(Supervisor::Message),root:String,app_name:String,supervisor:NamedTuple(started_at:Int64|Nil,pid:Int64),instances:Hash(String,Array(Instance::Config)),processes:Array(ControlClient::ProcessStatus),environment_variables:Hash(String,String),procfile_path:String,options_path:String,local_options_path:String,sock_path:String,supervisor_pid_path:String,pid_root:String,loaded_at:Int64|Nil,log_root:String|Nil)-class-method","name":"new","abstract":false,"args":[{"name":"version","external_name":"version","restriction":"String"},{"name":"messages","external_name":"messages","restriction":"Array(Supervisor::Message)"},{"name":"root","external_name":"root","restriction":"String"},{"name":"app_name","external_name":"app_name","restriction":"String"},{"name":"supervisor","external_name":"supervisor","restriction":"NamedTuple(started_at: Int64 | ::Nil, pid: Int64)"},{"name":"instances","external_name":"instances","restriction":"Hash(String, Array(Instance::Config))"},{"name":"processes","external_name":"processes","restriction":"Array(ControlClient::ProcessStatus)"},{"name":"environment_variables","external_name":"environment_variables","restriction":"Hash(String, String)"},{"name":"procfile_path","external_name":"procfile_path","restriction":"String"},{"name":"options_path","external_name":"options_path","restriction":"String"},{"name":"local_options_path","external_name":"local_options_path","restriction":"String"},{"name":"sock_path","external_name":"sock_path","restriction":"String"},{"name":"supervisor_pid_path","external_name":"supervisor_pid_path","restriction":"String"},{"name":"pid_root","external_name":"pid_root","restriction":"String"},{"name":"loaded_at","external_name":"loaded_at","restriction":"Int64 | ::Nil"},{"name":"log_root","external_name":"log_root","restriction":"String | ::Nil"}],"args_string":"(version : String, messages : Array(Supervisor::Message), root : String, app_name : String, supervisor : NamedTuple(started_at: Int64 | Nil, pid: Int64), instances : Hash(String, Array(Instance::Config)), processes : Array(ControlClient::ProcessStatus), environment_variables : Hash(String, String), procfile_path : String, options_path : String, local_options_path : String, sock_path : String, supervisor_pid_path : String, pid_root : String, loaded_at : Int64 | Nil, log_root : String | Nil)","args_html":"(version : String, messages : Array(<a href=\"../../Procodile/Supervisor/Message.html\">Supervisor::Message</a>), root : String, app_name : String, supervisor : NamedTuple(started_at: Int64 | Nil, pid: Int64), instances : Hash(String, Array(<a href=\"../../Procodile/Instance/Config.html\">Instance::Config</a>)), processes : Array(<a href=\"../../Procodile/ControlClient/ProcessStatus.html\">ControlClient::ProcessStatus</a>), environment_variables : Hash(String, String), procfile_path : String, options_path : String, local_options_path : String, sock_path : String, supervisor_pid_path : String, pid_root : String, loaded_at : Int64 | Nil, log_root : String | Nil)","location":{"filename":"src/procodile/control_client.cr","line_number":106,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L106"},"def":{"name":"new","args":[{"name":"version","external_name":"version","restriction":"String"},{"name":"messages","external_name":"messages","restriction":"Array(Supervisor::Message)"},{"name":"root","external_name":"root","restriction":"String"},{"name":"app_name","external_name":"app_name","restriction":"String"},{"name":"supervisor","external_name":"supervisor","restriction":"NamedTuple(started_at: Int64 | ::Nil, pid: Int64)"},{"name":"instances","external_name":"instances","restriction":"Hash(String, Array(Instance::Config))"},{"name":"processes","external_name":"processes","restriction":"Array(ControlClient::ProcessStatus)"},{"name":"environment_variables","external_name":"environment_variables","restriction":"Hash(String, String)"},{"name":"procfile_path","external_name":"procfile_path","restriction":"String"},{"name":"options_path","external_name":"options_path","restriction":"String"},{"name":"local_options_path","external_name":"local_options_path","restriction":"String"},{"name":"sock_path","external_name":"sock_path","restriction":"String"},{"name":"supervisor_pid_path","external_name":"supervisor_pid_path","restriction":"String"},{"name":"pid_root","external_name":"pid_root","restriction":"String"},{"name":"loaded_at","external_name":"loaded_at","restriction":"Int64 | ::Nil"},{"name":"log_root","external_name":"log_root","restriction":"String | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(version, messages, root, app_name, supervisor, instances, processes, environment_variables, procfile_path, options_path, local_options_path, sock_path, supervisor_pid_path, pid_root, loaded_at, log_root)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/procodile/control_client.cr","line_number":87,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L87"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"app_name:String-instance-method","name":"app_name","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":92,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L92"},"def":{"name":"app_name","return_type":"String","visibility":"Public","body":"@app_name"}},{"html_id":"environment_variables:Hash(String,String)-instance-method","name":"environment_variables","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":96,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L96"},"def":{"name":"environment_variables","return_type":"Hash(String, String)","visibility":"Public","body":"@environment_variables"}},{"html_id":"instances:Hash(String,Array(Instance::Config))-instance-method","name":"instances","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":94,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L94"},"def":{"name":"instances","return_type":"Hash(String, Array(Instance::Config))","visibility":"Public","body":"@instances"}},{"html_id":"loaded_at:Int64|Nil-instance-method","name":"loaded_at","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":103,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L103"},"def":{"name":"loaded_at","return_type":"Int64 | ::Nil","visibility":"Public","body":"@loaded_at"}},{"html_id":"local_options_path:String-instance-method","name":"local_options_path","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":99,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L99"},"def":{"name":"local_options_path","return_type":"String","visibility":"Public","body":"@local_options_path"}},{"html_id":"log_root:String|Nil-instance-method","name":"log_root","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":104,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L104"},"def":{"name":"log_root","return_type":"String | ::Nil","visibility":"Public","body":"@log_root"}},{"html_id":"messages:Array(Supervisor::Message)-instance-method","name":"messages","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":90,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L90"},"def":{"name":"messages","return_type":"Array(Supervisor::Message)","visibility":"Public","body":"@messages"}},{"html_id":"options_path:String-instance-method","name":"options_path","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":98,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L98"},"def":{"name":"options_path","return_type":"String","visibility":"Public","body":"@options_path"}},{"html_id":"pid_root:String-instance-method","name":"pid_root","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":102,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L102"},"def":{"name":"pid_root","return_type":"String","visibility":"Public","body":"@pid_root"}},{"html_id":"processes:Array(ControlClient::ProcessStatus)-instance-method","name":"processes","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":95,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L95"},"def":{"name":"processes","return_type":"Array(ControlClient::ProcessStatus)","visibility":"Public","body":"@processes"}},{"html_id":"procfile_path:String-instance-method","name":"procfile_path","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":97,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L97"},"def":{"name":"procfile_path","return_type":"String","visibility":"Public","body":"@procfile_path"}},{"html_id":"root:String-instance-method","name":"root","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":91,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L91"},"def":{"name":"root","return_type":"String","visibility":"Public","body":"@root"}},{"html_id":"sock_path:String-instance-method","name":"sock_path","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":100,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L100"},"def":{"name":"sock_path","return_type":"String","visibility":"Public","body":"@sock_path"}},{"html_id":"supervisor:NamedTuple(started_at:Int64|Nil,pid:Int64)-instance-method","name":"supervisor","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":93,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L93"},"def":{"name":"supervisor","return_type":"NamedTuple(started_at: Int64 | ::Nil, pid: Int64)","visibility":"Public","body":"@supervisor"}},{"html_id":"supervisor_pid_path:String-instance-method","name":"supervisor_pid_path","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":101,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L101"},"def":{"name":"supervisor_pid_path","return_type":"String","visibility":"Public","body":"@supervisor_pid_path"}},{"html_id":"version:String-instance-method","name":"version","abstract":false,"location":{"filename":"src/procodile/control_client.cr","line_number":89,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L89"},"def":{"name":"version","return_type":"String","visibility":"Public","body":"@version"}}]},{"html_id":"procodile/Procodile/ControlClient/SocketResponse","path":"Procodile/ControlClient/SocketResponse.html","kind":"alias","full_name":"Procodile::ControlClient::SocketResponse","name":"SocketResponse","abstract":false,"locations":[{"filename":"src/procodile/control_client.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_client.cr#L3"}],"repository_name":"procodile","program":false,"enum":false,"alias":true,"aliased":"(Array(Procodile::Instance::Config) | Array(Tuple(Procodile::Instance::Config | Nil, Procodile::Instance::Config | Nil)) | Bool | NamedTuple(started: Array(Procodile::Instance::Config), stopped: Array(Procodile::Instance::Config)) | Procodile::ControlClient::ReplyOfStatusCommand)","aliased_html":"Array(<a href=\"../../Procodile/Instance/Config.html\">Procodile::Instance::Config</a>) | Array({<a href=\"../../Procodile/Instance/Config.html\">Procodile::Instance::Config</a>?, <a href=\"../../Procodile/Instance/Config.html\">Procodile::Instance::Config</a>?}) | Bool | {started: Array(<a href=\"../../Procodile/Instance/Config.html\">Procodile::Instance::Config</a>), stopped: Array(<a href=\"../../Procodile/Instance/Config.html\">Procodile::Instance::Config</a>)} | <a href=\"../../Procodile/ControlClient/ReplyOfStatusCommand.html\">Procodile::ControlClient::ReplyOfStatusCommand</a>","const":false,"namespace":{"html_id":"procodile/Procodile/ControlClient","kind":"class","full_name":"Procodile::ControlClient","name":"ControlClient"}}]},{"html_id":"procodile/Procodile/ControlServer","path":"Procodile/ControlServer.html","kind":"class","full_name":"Procodile::ControlServer","name":"ControlServer","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/control_server.cr","line_number":4,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_server.cr#L4"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"},"class_methods":[{"html_id":"start(supervisor:Supervisor):Nil-class-method","name":"start","abstract":false,"args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"}],"args_string":"(supervisor : Supervisor) : Nil","args_html":"(supervisor : <a href=\"../Procodile/Supervisor.html\">Supervisor</a>) : Nil","location":{"filename":"src/procodile/control_server.cr","line_number":5,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_server.cr#L5"},"def":{"name":"start","args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"}],"return_type":"Nil","visibility":"Public","body":"spawn do\n  socket = self.new(supervisor)\n  socket.listen\nend"}}],"constructors":[{"html_id":"new(supervisor:Supervisor)-class-method","name":"new","abstract":false,"args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"}],"args_string":"(supervisor : Supervisor)","args_html":"(supervisor : <a href=\"../Procodile/Supervisor.html\">Supervisor</a>)","location":{"filename":"src/procodile/control_server.cr","line_number":12,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_server.cr#L12"},"def":{"name":"new","args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"}],"visibility":"Public","body":"_ = allocate\n_.initialize(supervisor)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"listen:Nil-instance-method","name":"listen","abstract":false,"location":{"filename":"src/procodile/control_server.cr","line_number":15,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_server.cr#L15"},"def":{"name":"listen","return_type":"Nil","visibility":"Public","body":"begin\n  sock_path = @supervisor.config.sock_path\n  server = UNIXServer.new(sock_path)\n  Procodile.log(nil, \"control\", \"Listening at #{sock_path}\")\n  while (client = server.accept)\n    session = ControlSession.new(@supervisor, client)\n    spawn(handle_client(session, client))\n  end\nensure\n  if sock_path\n    FileUtils.rm_rf(sock_path)\n  end\nend"}}]},{"html_id":"procodile/Procodile/ControlSession","path":"Procodile/ControlSession.html","kind":"class","full_name":"Procodile::ControlSession","name":"ControlSession","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/control_session.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L2"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"},"constructors":[{"html_id":"new(supervisor:Supervisor,client:UNIXSocket)-class-method","name":"new","abstract":false,"args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"},{"name":"client","external_name":"client","restriction":"UNIXSocket"}],"args_string":"(supervisor : Supervisor, client : UNIXSocket)","args_html":"(supervisor : <a href=\"../Procodile/Supervisor.html\">Supervisor</a>, client : UNIXSocket)","location":{"filename":"src/procodile/control_session.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L3"},"def":{"name":"new","args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"},{"name":"client","external_name":"client","restriction":"UNIXSocket"}],"visibility":"Public","body":"_ = allocate\n_.initialize(supervisor, client)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"receive_data(data:String):String-instance-method","name":"receive_data","abstract":false,"args":[{"name":"data","external_name":"data","restriction":"String"}],"args_string":"(data : String) : String","args_html":"(data : String) : String","location":{"filename":"src/procodile/control_session.cr","line_number":99,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L99"},"def":{"name":"receive_data","args":[{"name":"data","external_name":"data","restriction":"String"}],"return_type":"String","visibility":"Public","body":"command, session_data = data.split(/\\s+/, 2)\noptions = ControlSession::Options.from_json(session_data)\ncallable = {} of String => Proc(ControlSession::Options, String)\ncallable[\"start_processes\"] = ->start_processes(ControlSession::Options)\ncallable[\"stop\"] = ->stop(ControlSession::Options)\ncallable[\"restart\"] = ->restart(ControlSession::Options)\ncallable[\"reload_config\"] = ->reload_config(ControlSession::Options)\ncallable[\"check_concurrency\"] = ->check_concurrency(ControlSession::Options)\ncallable[\"status\"] = ->status(ControlSession::Options)\nif callable[command]?\n  begin\n    callable[command].call(options)\n  rescue e : Error\n    Procodile.log(nil, \"control\", \"Error: #{e.message}\".colorize.red.to_s)\n    \"500 #{e.message}\"\n  end\nelse\n  \"404 Invaid command\"\nend\n"}}],"types":[{"html_id":"procodile/Procodile/ControlSession/Options","path":"Procodile/ControlSession/Options.html","kind":"struct","full_name":"Procodile::ControlSession::Options","name":"Options","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/control_session.cr","line_number":127,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L127"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"procodile/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"procodile/Procodile/ControlSession","kind":"class","full_name":"Procodile::ControlSession","name":"ControlSession"},"constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/procodile/control_session.cr","line_number":128,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L128"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"port_allocations:Hash(String,Int32)|Nil-instance-method","name":"port_allocations","abstract":false,"location":{"filename":"src/procodile/control_session.cr","line_number":132,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L132"},"def":{"name":"port_allocations","return_type":"Hash(String, Int32) | ::Nil","visibility":"Public","body":"@port_allocations"}},{"html_id":"processes:Array(String)|Nil-instance-method","name":"processes","abstract":false,"location":{"filename":"src/procodile/control_session.cr","line_number":130,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L130"},"def":{"name":"processes","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@processes"}},{"html_id":"reload:Bool|Nil-instance-method","name":"reload","abstract":false,"location":{"filename":"src/procodile/control_session.cr","line_number":133,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L133"},"def":{"name":"reload","return_type":"Bool | ::Nil","visibility":"Public","body":"@reload"}},{"html_id":"stop_supervisor:Bool|Nil-instance-method","name":"stop_supervisor","abstract":false,"location":{"filename":"src/procodile/control_session.cr","line_number":134,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L134"},"def":{"name":"stop_supervisor","return_type":"Bool | ::Nil","visibility":"Public","body":"@stop_supervisor"}},{"html_id":"tag:String|Nil-instance-method","name":"tag","abstract":false,"location":{"filename":"src/procodile/control_session.cr","line_number":131,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/control_session.cr#L131"},"def":{"name":"tag","return_type":"String | ::Nil","visibility":"Public","body":"@tag"}}]}]},{"html_id":"procodile/Procodile/Error","path":"Procodile/Error.html","kind":"class","full_name":"Procodile::Error","name":"Error","abstract":false,"superclass":{"html_id":"procodile/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"procodile/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile.cr","line_number":12,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile.cr#L12"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"}},{"html_id":"procodile/Procodile/Instance","path":"Procodile/Instance.html","kind":"class","full_name":"Procodile::Instance","name":"Instance","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/instance.cr","line_number":5,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L5"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"},"constructors":[{"html_id":"new(supervisor:Supervisor,process:Procodile::Process,id:Int32)-class-method","name":"new","abstract":false,"args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"},{"name":"process","external_name":"process","restriction":"Procodile::Process"},{"name":"id","external_name":"id","restriction":"Int32"}],"args_string":"(supervisor : Supervisor, process : Procodile::Process, id : Int32)","args_html":"(supervisor : <a href=\"../Procodile/Supervisor.html\">Supervisor</a>, process : <a href=\"../Procodile/Process.html\">Procodile::Process</a>, id : Int32)","location":{"filename":"src/procodile/instance.cr","line_number":21,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L21"},"def":{"name":"new","args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"},{"name":"process","external_name":"process","restriction":"Procodile::Process"},{"name":"id","external_name":"id","restriction":"Int32"}],"visibility":"Public","body":"_ = allocate\n_.initialize(supervisor, process, id)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"check:Nil-instance-method","name":"check","doc":"\nCheck the status of this process and handle as appropriate.\n","summary":"<p>Check the status of this process and handle as appropriate.</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":191,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L191"},"def":{"name":"check","return_type":"Nil","visibility":"Public","body":"if failed?\n  return\nend\nif running?\n  return true\nend\nif update_pid\n  return check\nend\nif @supervisor.allow_respawning?\n  if can_respawn?\n    Procodile.log(@process.log_color, description, \"Process has stopped. Respawning...\")\n    start\n    add_respawn\n  else\n    if respawns >= @process.max_respawns\n      Procodile.log(@process.log_color, description, \"Warning:\".colorize.light_gray.on_red.to_s + \" this process has been respawned #{respawns} times and keeps dying.\".colorize.red.to_s)\n      Procodile.log(@process.log_color, description, \"It will not be respawned automatically any longer and will no longer be managed.\".colorize.red.to_s)\n      @failed_at = Time.local\n      tidy\n    end\n  end\nelse\n  Procodile.log(@process.log_color, description, \"Process has stopped. Respawning not available.\")\n  @failed_at = Time.local\n  tidy\nend\n"}},{"html_id":"description:String-instance-method","name":"description","doc":"Return a description for this instance","summary":"<p>Return a description for this instance</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":19,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L19"},"def":{"name":"description","return_type":"String","visibility":"Public","body":"if (__temp_1 = @description).nil?\n  @description = (\"#{@process.name}.#{@id}\")\nelse\n  __temp_1\nend"}},{"html_id":"failed?:Bool-instance-method","name":"failed?","doc":"\nHas this failed?\n","summary":"<p>Has this failed?</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":302,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L302"},"def":{"name":"failed?","return_type":"Bool","visibility":"Public","body":"@failed_at ? true : false"}},{"html_id":"id:Int32-instance-method","name":"id","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":15,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L15"},"def":{"name":"id","return_type":"Int32","visibility":"Public","body":"@id"}},{"html_id":"on_stop:Nil-instance-method","name":"on_stop","doc":"\nA method that will be called when this instance has been stopped and it isn't going to be\nstarted again\n","summary":"<p>A method that will be called when this instance has been stopped and it isn't going to be started again</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":310,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L310"},"def":{"name":"on_stop","return_type":"Nil","visibility":"Public","body":"@started_at = nil\n@stopped = true\ntidy\n"}},{"html_id":"pid:Int64|Nil-instance-method","name":"pid","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":12,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L12"},"def":{"name":"pid","return_type":"Int64 | ::Nil","visibility":"Public","body":"@pid"}},{"html_id":"pid=(pid:Int64|Nil)-instance-method","name":"pid=","abstract":false,"args":[{"name":"pid","external_name":"pid","restriction":"Int64 | ::Nil"}],"args_string":"(pid : Int64 | Nil)","args_html":"(pid : Int64 | Nil)","location":{"filename":"src/procodile/instance.cr","line_number":12,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L12"},"def":{"name":"pid=","args":[{"name":"pid","external_name":"pid","restriction":"Int64 | ::Nil"}],"visibility":"Public","body":"@pid = pid"}},{"html_id":"port:Int32|Nil-instance-method","name":"port","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":10,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L10"},"def":{"name":"port","return_type":"Int32 | ::Nil","visibility":"Public","body":"@port"}},{"html_id":"port=(port:Int32|Nil)-instance-method","name":"port=","abstract":false,"args":[{"name":"port","external_name":"port","restriction":"Int32 | ::Nil"}],"args_string":"(port : Int32 | Nil)","args_html":"(port : Int32 | Nil)","location":{"filename":"src/procodile/instance.cr","line_number":10,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L10"},"def":{"name":"port=","args":[{"name":"port","external_name":"port","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@port = port"}},{"html_id":"process:Procodile::Process-instance-method","name":"process","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":11,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L11"},"def":{"name":"process","return_type":"Procodile::Process","visibility":"Public","body":"@process"}},{"html_id":"process=(process:Procodile::Process)-instance-method","name":"process=","abstract":false,"args":[{"name":"process","external_name":"process","restriction":"Procodile::Process"}],"args_string":"(process : Procodile::Process)","args_html":"(process : <a href=\"../Procodile/Process.html\">Procodile::Process</a>)","location":{"filename":"src/procodile/instance.cr","line_number":11,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L11"},"def":{"name":"process=","args":[{"name":"process","external_name":"process","restriction":"Procodile::Process"}],"visibility":"Public","body":"@process = process"}},{"html_id":"restart(wg:WaitGroup):self|Nil-instance-method","name":"restart","doc":"\nRetarts the process using the appropriate method from the process configuration\n\nWhy would this return self here?","summary":"<p>Retarts the process using the appropriate method from the process configuration</p>","abstract":false,"args":[{"name":"wg","external_name":"wg","restriction":"WaitGroup"}],"args_string":"(wg : WaitGroup) : self | Nil","args_html":"(wg : WaitGroup) : <span class=\"k\">self</span> | Nil","location":{"filename":"src/procodile/instance.cr","line_number":132,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L132"},"def":{"name":"restart","args":[{"name":"wg","external_name":"wg","restriction":"WaitGroup"}],"return_type":"self | ::Nil","visibility":"Public","body":"restart_mode = @process.restart_mode\nProcodile.log(@process.log_color, description, \"Restarting using #{restart_mode} mode\")\nupdate_pid\ncase restart_mode\nwhen Signal::USR1, Signal::USR2\n  if running?\n    ::Process.signal(restart_mode.as(Signal), @pid.not_nil!)\n    if @supervisor.tag\n      @tag = @supervisor.tag\n    end\n    Procodile.log(@process.log_color, description, \"Sent #{restart_mode.to_s.upcase} signal to process #{@pid}\")\n  else\n    Procodile.log(@process.log_color, description, \"Process not running already. Starting it.\")\n    on_stop\n    new_instance = @process.create_instance(@supervisor)\n    new_instance.port = self.port\n    new_instance.start\n  end\n  self\nwhen \"start-term\"\n  new_instance = @process.create_instance(@supervisor)\n  new_instance.start\n  stop\n  new_instance\nwhen \"term-start\"\n  wg.add\n  stop\n  new_instance = @process.create_instance(@supervisor)\n  new_instance.port = self.port\n  spawn do\n    begin\n      while running?\n        sleep(0.5.seconds)\n      end\n      @supervisor.remove_instance(self)\n      new_instance.start\n    ensure\n      wg.done\n    end\n  end\n  new_instance\nend\n"}},{"html_id":"running?:Bool-instance-method","name":"running?","doc":"\nIs this process running? Pass an option to check the given PID instead of the instance\n","summary":"<p>Is this process running? Pass an option to check the given PID instead of the instance</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":282,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L282"},"def":{"name":"running?","return_type":"Bool","visibility":"Public","body":"begin\n  if (pid = @pid)\n    ::Process.pgid(pid) ? true : false\n  else\n    false\n  end\nrescue RuntimeError\n  false\nend"}},{"html_id":"should_be_running?:Bool-instance-method","name":"should_be_running?","doc":"\nShould this process be running?\n","summary":"<p>Should this process be running?</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":275,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L275"},"def":{"name":"should_be_running?","return_type":"Bool","visibility":"Public","body":"!(stopped? || stopping?)"}},{"html_id":"start:Nil-instance-method","name":"start","doc":"\nStart a new instance of this process\n","summary":"<p>Start a new instance of this process</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":29,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L29"},"def":{"name":"start","return_type":"Nil","visibility":"Public","body":"if stopping?\n  Procodile.log(@process.log_color, description, \"Process is stopped/stopping therefore cannot be started again.\")\n  return\nend\nupdate_pid\nif running?\n  Procodile.log(@process.log_color, description, \"Already running with PID #{@pid}\")\n  return\nend\nport_allocations = @supervisor.run_options.port_allocations\nif port_allocations && (chosen_port = port_allocations[@process.name]?)\n  if chosen_port == 0\n    allocate_port\n  else\n    @port = chosen_port\n    Procodile.log(@process.log_color, description, \"Assigned #{chosen_port} to process\")\n  end\nelse\n  if (proposed_port = @process.allocate_port_from) && (@process.restart_mode != \"start-term\")\n    process = @supervisor.processes[@process]?\n    allocated_ports = process ? process.select(&.running?).map(&.port) : [] of Int32\n    while !@port\n      if allocated_ports.includes?(proposed_port)\n      else\n        @port = proposed_port\n      end\n      proposed_port = proposed_port + 1\n    end\n  end\nend\nif self.process.log_path && (@supervisor.run_options.force_single_log? != true)\n  FileUtils.mkdir_p(File.dirname(self.process.log_path))\n  log_destination = File.open(self.process.log_path, \"a\")\n  io = nil\nelse\n  reader, writer = IO.pipe\n  log_destination = writer\n  io = reader\nend\nif @supervisor.tag\n  @tag = @supervisor.tag.dup\nend\nDir.cd(@process.config.root)\ncommands = @process.command.split(\" \")\nprocess = ::Process.new(command: commands[0], args: commands[1..], env: environment_variables, output: log_destination, error: log_destination)\nspawn do\n  process.wait\nend\n@pid = process.pid\nlog_destination.close\nFile.write(pid_file_path, \"#{@pid}\\n\")\n@supervisor.add_instance(self, io)\ntag = @tag ? \" (tagged with #{@tag})\" : \"\"\nProcodile.log(@process.log_color, description, \"Started with PID #{@pid}#{tag}\")\nif self.process.log_path && io.nil?\n  Procodile.log(@process.log_color, description, \"Logging to #{self.process.log_path}\")\nend\n@started_at = Time.local\n"}},{"html_id":"status:Instance::Status-instance-method","name":"status","doc":"\nReturn the status of this instance\n","summary":"<p>Return the status of this instance</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":258,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L258"},"def":{"name":"status","return_type":"Instance::Status","visibility":"Public","body":"if stopped?\n  Instance::Status::Stopped\nelse\n  if stopping?\n    Instance::Status::Stopping\n  else\n    if running?\n      Instance::Status::Running\n    else\n      if failed?\n        Instance::Status::Failed\n      else\n        Instance::Status::Unknown\n      end\n    end\n  end\nend"}},{"html_id":"stop:Nil-instance-method","name":"stop","doc":"\nSend this signal the signal to stop and mark the instance in a state that\ntells us that we want it to be stopped.\n","summary":"<p>Send this signal the signal to stop and mark the instance in a state that tells us that we want it to be stopped.</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":114,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L114"},"def":{"name":"stop","return_type":"Nil","visibility":"Public","body":"@stopping_at = Time.local\nupdate_pid\nif running?\n  Procodile.log(@process.log_color, description, \"Sending #{@process.term_signal} to #{@pid}\")\n  ::Process.signal(@process.term_signal, @pid.not_nil!)\nelse\n  Procodile.log(@process.log_color, description, \"Process already stopped\")\nend\n"}},{"html_id":"stopped?:Bool-instance-method","name":"stopped?","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":16,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L16"},"def":{"name":"stopped?","return_type":"Bool","visibility":"Public","body":"@stopped"}},{"html_id":"stopping?:Bool-instance-method","name":"stopping?","doc":"\nIs this instance supposed to be stopping/be stopped?\n","summary":"<p>Is this instance supposed to be stopping/be stopped?</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":295,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L295"},"def":{"name":"stopping?","return_type":"Bool","visibility":"Public","body":"@stopping_at ? true : false"}},{"html_id":"tag:String|Nil-instance-method","name":"tag","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":14,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L14"},"def":{"name":"tag","return_type":"String | ::Nil","visibility":"Public","body":"@tag"}},{"html_id":"to_struct:Instance::Config-instance-method","name":"to_struct","doc":"\nReturn this instance as a hash\n","summary":"<p>Return this instance as a hash</p>","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":240,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L240"},"def":{"name":"to_struct","return_type":"Instance::Config","visibility":"Public","body":"started_at = @started_at\nInstance::Config.new(description: self.description, pid: self.pid, respawns: self.respawns, status: self.status, started_at: started_at ? started_at.to_unix : nil, tag: self.tag, port: @port, foreground: @supervisor.run_use_foreground?)\n"}}],"types":[{"html_id":"procodile/Procodile/Instance/Config","path":"Procodile/Instance/Config.html","kind":"struct","full_name":"Procodile::Instance::Config","name":"Config","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/instance.cr","line_number":456,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L456"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"procodile/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"procodile/Procodile/Instance","kind":"class","full_name":"Procodile::Instance","name":"Instance"},"constructors":[{"html_id":"new(description:String,pid:Int64|Nil,respawns:Int32,status:Instance::Status,started_at:Int64|Nil,tag:String|Nil,port:Int32|Nil,foreground:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"description","external_name":"description","restriction":"String"},{"name":"pid","external_name":"pid","restriction":"Int64 | ::Nil"},{"name":"respawns","external_name":"respawns","restriction":"Int32"},{"name":"status","external_name":"status","restriction":"Instance::Status"},{"name":"started_at","external_name":"started_at","restriction":"Int64 | ::Nil"},{"name":"tag","external_name":"tag","restriction":"String | ::Nil"},{"name":"port","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"foreground","default_value":"false","external_name":"foreground","restriction":"Bool"}],"args_string":"(description : String, pid : Int64 | Nil, respawns : Int32, status : Instance::Status, started_at : Int64 | Nil, tag : String | Nil, port : Int32 | Nil, foreground : Bool = false)","args_html":"(description : String, pid : Int64 | Nil, respawns : Int32, status : <a href=\"../../Procodile/Instance/Status.html\">Instance::Status</a>, started_at : Int64 | Nil, tag : String | Nil, port : Int32 | Nil, foreground : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/procodile/instance.cr","line_number":468,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L468"},"def":{"name":"new","args":[{"name":"description","external_name":"description","restriction":"String"},{"name":"pid","external_name":"pid","restriction":"Int64 | ::Nil"},{"name":"respawns","external_name":"respawns","restriction":"Int32"},{"name":"status","external_name":"status","restriction":"Instance::Status"},{"name":"started_at","external_name":"started_at","restriction":"Int64 | ::Nil"},{"name":"tag","external_name":"tag","restriction":"String | ::Nil"},{"name":"port","external_name":"port","restriction":"Int32 | ::Nil"},{"name":"foreground","default_value":"false","external_name":"foreground","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(description, pid, respawns, status, started_at, tag, port, foreground)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/procodile/instance.cr","line_number":457,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L457"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}}],"instance_methods":[{"html_id":"description:String-instance-method","name":"description","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":459,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L459"},"def":{"name":"description","return_type":"String","visibility":"Public","body":"@description"}},{"html_id":"foreground?:Bool-instance-method","name":"foreground?","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":466,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L466"},"def":{"name":"foreground?","return_type":"Bool","visibility":"Public","body":"@foreground"}},{"html_id":"pid:Int64|Nil-instance-method","name":"pid","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":460,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L460"},"def":{"name":"pid","return_type":"Int64 | ::Nil","visibility":"Public","body":"@pid"}},{"html_id":"port:Int32|Nil-instance-method","name":"port","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":465,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L465"},"def":{"name":"port","return_type":"Int32 | ::Nil","visibility":"Public","body":"@port"}},{"html_id":"respawns:Int32-instance-method","name":"respawns","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":461,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L461"},"def":{"name":"respawns","return_type":"Int32","visibility":"Public","body":"@respawns"}},{"html_id":"started_at:Int64|Nil-instance-method","name":"started_at","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":463,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L463"},"def":{"name":"started_at","return_type":"Int64 | ::Nil","visibility":"Public","body":"@started_at"}},{"html_id":"status:Instance::Status-instance-method","name":"status","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":462,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L462"},"def":{"name":"status","return_type":"Instance::Status","visibility":"Public","body":"@status"}},{"html_id":"tag:String|Nil-instance-method","name":"tag","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":464,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L464"},"def":{"name":"tag","return_type":"String | ::Nil","visibility":"Public","body":"@tag"}}]},{"html_id":"procodile/Procodile/Instance/Status","path":"Procodile/Instance/Status.html","kind":"enum","full_name":"Procodile::Instance::Status","name":"Status","abstract":false,"ancestors":[{"html_id":"procodile/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"procodile/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/instance.cr","line_number":448,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L448"}],"repository_name":"procodile","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Unknown","name":"Unknown","value":"0"},{"id":"Stopped","name":"Stopped","value":"1"},{"id":"Stopping","name":"Stopping","value":"2"},{"id":"Running","name":"Running","value":"3"},{"id":"Failed","name":"Failed","value":"4"}],"namespace":{"html_id":"procodile/Procodile/Instance","kind":"class","full_name":"Procodile::Instance","name":"Instance"},"instance_methods":[{"html_id":"failed?-instance-method","name":"failed?","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":453,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L453"},"def":{"name":"failed?","visibility":"Public","body":"self == Failed"}},{"html_id":"running?-instance-method","name":"running?","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":452,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L452"},"def":{"name":"running?","visibility":"Public","body":"self == Running"}},{"html_id":"stopped?-instance-method","name":"stopped?","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":450,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L450"},"def":{"name":"stopped?","visibility":"Public","body":"self == Stopped"}},{"html_id":"stopping?-instance-method","name":"stopping?","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":451,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L451"},"def":{"name":"stopping?","visibility":"Public","body":"self == Stopping"}},{"html_id":"unknown?-instance-method","name":"unknown?","abstract":false,"location":{"filename":"src/procodile/instance.cr","line_number":449,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/instance.cr#L449"},"def":{"name":"unknown?","visibility":"Public","body":"self == Unknown"}}]}]},{"html_id":"procodile/Procodile/Process","path":"Procodile/Process.html","kind":"class","full_name":"Procodile::Process","name":"Process","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/process.cr","line_number":5,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L5"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"},"constructors":[{"html_id":"new(config:Config,name:String,command:String,options:Procodile::Process::Option=Procodile::Process::Option.new)-class-method","name":"new","abstract":false,"args":[{"name":"config","external_name":"config","restriction":"Config"},{"name":"name","external_name":"name","restriction":"String"},{"name":"command","external_name":"command","restriction":"String"},{"name":"options","default_value":"Procodile::Process::Option.new","external_name":"options","restriction":"Procodile::Process::Option"}],"args_string":"(config : Config, name : String, command : String, options : Procodile::Process::Option = Procodile::Process::Option.new)","args_html":"(config : <a href=\"../Procodile/Config.html\">Config</a>, name : String, command : String, options : <a href=\"../Procodile/Process/Option.html\">Procodile::Process::Option</a> = <span class=\"t\">Procodile</span><span class=\"t\">::</span><span class=\"t\">Process</span><span class=\"t\">::</span><span class=\"t\">Option</span>.new)","location":{"filename":"src/procodile/process.cr","line_number":19,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L19"},"def":{"name":"new","args":[{"name":"config","external_name":"config","restriction":"Config"},{"name":"name","external_name":"name","restriction":"String"},{"name":"command","external_name":"command","restriction":"String"},{"name":"options","default_value":"Procodile::Process::Option.new","external_name":"options","restriction":"Procodile::Process::Option"}],"visibility":"Public","body":"_ = allocate\n_.initialize(config, name, command, options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"allocate_port_from(*args,**options)-instance-method","name":"allocate_port_from","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/procodile/process.cr","line_number":17,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L17"},"def":{"name":"allocate_port_from","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@options.allocate_port_from(*args, **options)"}},{"html_id":"allocate_port_from(*args,**options,&)-instance-method","name":"allocate_port_from","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/procodile/process.cr","line_number":17,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L17"},"def":{"name":"allocate_port_from","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@options.allocate_port_from(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"command:String-instance-method","name":"command","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":12,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L12"},"def":{"name":"command","return_type":"String","visibility":"Public","body":"@command"}},{"html_id":"command=(command:String)-instance-method","name":"command=","abstract":false,"args":[{"name":"command","external_name":"command","restriction":"String"}],"args_string":"(command : String)","args_html":"(command : String)","location":{"filename":"src/procodile/process.cr","line_number":12,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L12"},"def":{"name":"command=","args":[{"name":"command","external_name":"command","restriction":"String"}],"visibility":"Public","body":"@command = command"}},{"html_id":"config:Config-instance-method","name":"config","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":9,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L9"},"def":{"name":"config","return_type":"Config","visibility":"Public","body":"@config"}},{"html_id":"correct_quantity?(quantity:Int32):Bool-instance-method","name":"correct_quantity?","doc":"\nIs the given quantity suitable for this process?\n","summary":"<p>Is the given quantity suitable for this process?</p>","abstract":false,"args":[{"name":"quantity","external_name":"quantity","restriction":"Int32"}],"args_string":"(quantity : Int32) : Bool","args_html":"(quantity : Int32) : Bool","location":{"filename":"src/procodile/process.cr","line_number":183,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L183"},"def":{"name":"correct_quantity?","args":[{"name":"quantity","external_name":"quantity","restriction":"Int32"}],"return_type":"Bool","visibility":"Public","body":"if self.restart_mode == \"start-term\"\n  quantity >= self.quantity\nelse\n  self.quantity == quantity\nend"}},{"html_id":"create_instance(supervisor:Supervisor):Instance-instance-method","name":"create_instance","doc":"\nCreate a new instance\n","summary":"<p>Create a new instance</p>","abstract":false,"args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"}],"args_string":"(supervisor : Supervisor) : Instance","args_html":"(supervisor : <a href=\"../Procodile/Supervisor.html\">Supervisor</a>) : <a href=\"../Procodile/Instance.html\">Instance</a>","location":{"filename":"src/procodile/process.cr","line_number":151,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L151"},"def":{"name":"create_instance","args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"}],"return_type":"Instance","visibility":"Public","body":"Instance.new(supervisor, self, instance_id)"}},{"html_id":"default_log_file_name:String-instance-method","name":"default_log_file_name","doc":"\nReturn the defualt log file name\n","summary":"<p>Return the defualt log file name</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":94,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L94"},"def":{"name":"default_log_file_name","return_type":"String","visibility":"Public","body":"@options.log_file_name || \"#{@name}.log\""}},{"html_id":"default_log_path:String-instance-method","name":"default_log_path","doc":"\nReturn the log path for this process if no log path is provided and split logs\nis enabled\n","summary":"<p>Return the log path for this process if no log path is provided and split logs is enabled</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":83,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L83"},"def":{"name":"default_log_path","return_type":"String","visibility":"Public","body":"if (lr = @config.log_root)\n  File.join(lr, default_log_file_name)\nelse\n  File.join(@config.root, default_log_file_name)\nend"}},{"html_id":"environment_variables:Hash(String,String)-instance-method","name":"environment_variables","doc":"\nReturn all environment variables for this process\n","summary":"<p>Return all environment variables for this process</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":30,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L30"},"def":{"name":"environment_variables","return_type":"Hash(String, String)","visibility":"Public","body":"global_variables = @config.environment_variables\nprocess_vars = if (process = @config.process_options[@name]?)\n  process.env || ({} of String => String)\nelse\n  {} of String => String\nend\nprocess_local_vars = if (local_process = @config.local_process_options[@name]?)\n  local_process.env || ({} of String => String)\nelse\n  {} of String => String\nend\nglobal_variables.merge(process_vars.merge(process_local_vars))\n"}},{"html_id":"generate_instances(supervisor:Supervisor,quantity:Int32=self.quantity):Array(Instance)-instance-method","name":"generate_instances","doc":"\nGenerate an array of new instances for this process (based on its quantity)\n","summary":"<p>Generate an array of new instances for this process (based on its quantity)</p>","abstract":false,"args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"},{"name":"quantity","default_value":"self.quantity","external_name":"quantity","restriction":"Int32"}],"args_string":"(supervisor : Supervisor, quantity : Int32 = self.quantity) : Array(Instance)","args_html":"(supervisor : <a href=\"../Procodile/Supervisor.html\">Supervisor</a>, quantity : Int32 = <span class=\"k\">self</span>.quantity) : Array(<a href=\"../Procodile/Instance.html\">Instance</a>)","location":{"filename":"src/procodile/process.cr","line_number":141,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L141"},"def":{"name":"generate_instances","args":[{"name":"supervisor","external_name":"supervisor","restriction":"Supervisor"},{"name":"quantity","default_value":"self.quantity","external_name":"quantity","restriction":"Int32"}],"return_type":"Array(Instance)","visibility":"Public","body":"Array.new(quantity) do\n  create_instance(supervisor)\nend"}},{"html_id":"log_color:Colorize::ColorANSI-instance-method","name":"log_color","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":14,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L14"},"def":{"name":"log_color","return_type":"Colorize::ColorANSI","visibility":"Public","body":"@log_color"}},{"html_id":"log_color=(log_color:Colorize::ColorANSI)-instance-method","name":"log_color=","abstract":false,"args":[{"name":"log_color","external_name":"log_color","restriction":"Colorize::ColorANSI"}],"args_string":"(log_color : Colorize::ColorANSI)","args_html":"(log_color : Colorize::ColorANSI)","location":{"filename":"src/procodile/process.cr","line_number":14,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L14"},"def":{"name":"log_color=","args":[{"name":"log_color","external_name":"log_color","restriction":"Colorize::ColorANSI"}],"visibility":"Public","body":"@log_color = log_color"}},{"html_id":"log_path:String-instance-method","name":"log_path","doc":"\nReturn the path where log output for this process should be written to. If\nnone, output will be written to the supervisor log.\n","summary":"<p>Return the path where log output for this process should be written to.</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":73,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L73"},"def":{"name":"log_path","return_type":"String","visibility":"Public","body":"log_path = @options.log_path\nlog_path ? File.expand_path(log_path, @config.root) : default_log_path\n"}},{"html_id":"max_respawns:Int32-instance-method","name":"max_respawns","doc":"\nThe maximum number of times this process can be respawned in the given period\n","summary":"<p>The maximum number of times this process can be respawned in the given period</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":58,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L58"},"def":{"name":"max_respawns","return_type":"Int32","visibility":"Public","body":"@options.max_respawns || 5"}},{"html_id":"name:String-instance-method","name":"name","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":10,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L10"},"def":{"name":"name","return_type":"String","visibility":"Public","body":"@name"}},{"html_id":"network_protocol:String-instance-method","name":"network_protocol","doc":"\nReturn the network protocol for this process\n","summary":"<p>Return the network protocol for this process</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":120,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L120"},"def":{"name":"network_protocol","return_type":"String","visibility":"Public","body":"@options.network_protocol || \"tcp\""}},{"html_id":"options:Procodile::Process::Option-instance-method","name":"options","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":13,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L13"},"def":{"name":"options","return_type":"Procodile::Process::Option","visibility":"Public","body":"@options"}},{"html_id":"options=(options:Procodile::Process::Option)-instance-method","name":"options=","abstract":false,"args":[{"name":"options","external_name":"options","restriction":"Procodile::Process::Option"}],"args_string":"(options : Procodile::Process::Option)","args_html":"(options : <a href=\"../Procodile/Process/Option.html\">Procodile::Process::Option</a>)","location":{"filename":"src/procodile/process.cr","line_number":13,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L13"},"def":{"name":"options=","args":[{"name":"options","external_name":"options","restriction":"Procodile::Process::Option"}],"visibility":"Public","body":"@options = options"}},{"html_id":"proxy?:Bool-instance-method","name":"proxy?","doc":"\nIs this process enabled for proxying?\n","summary":"<p>Is this process enabled for proxying?</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":127,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L127"},"def":{"name":"proxy?","return_type":"Bool","visibility":"Public","body":"!!@options.proxy_port"}},{"html_id":"proxy_address:String|Nil-instance-method","name":"proxy_address","doc":"\nReturn the port for the proxy to listen on for this process type\n","summary":"<p>Return the port for the proxy to listen on for this process type</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":134,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L134"},"def":{"name":"proxy_address","return_type":"String | ::Nil","visibility":"Public","body":"proxy? ? @options.proxy_address || \"127.0.0.1\" : nil"}},{"html_id":"proxy_port(*args,**options)-instance-method","name":"proxy_port","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options)","args_html":"(*args, **options)","location":{"filename":"src/procodile/process.cr","line_number":17,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L17"},"def":{"name":"proxy_port","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"visibility":"Public","body":"@options.proxy_port(*args, **options)"}},{"html_id":"proxy_port(*args,**options,&)-instance-method","name":"proxy_port","abstract":false,"args":[{"name":"args","external_name":"args","restriction":""}],"args_string":"(*args, **options, &)","args_html":"(*args, **options, &)","location":{"filename":"src/procodile/process.cr","line_number":17,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L17"},"def":{"name":"proxy_port","args":[{"name":"args","external_name":"args","restriction":""}],"double_splat":{"name":"options","external_name":"options","restriction":""},"splat_index":0,"yields":1,"block_arity":1,"visibility":"Public","body":"@options.proxy_port(*args, **options) do |*yield_args|\n  yield *yield_args\nend"}},{"html_id":"quantity:Int32-instance-method","name":"quantity","doc":"\nHow many instances of this process should be started\n","summary":"<p>How many instances of this process should be started</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":51,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L51"},"def":{"name":"quantity","return_type":"Int32","visibility":"Public","body":"@options.quantity || 1"}},{"html_id":"removed=(removed:Bool)-instance-method","name":"removed=","abstract":false,"args":[{"name":"removed","external_name":"removed","restriction":"Bool"}],"args_string":"(removed : Bool)","args_html":"(removed : Bool)","location":{"filename":"src/procodile/process.cr","line_number":15,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L15"},"def":{"name":"removed=","args":[{"name":"removed","external_name":"removed","restriction":"Bool"}],"visibility":"Public","body":"@removed = removed"}},{"html_id":"removed?:Bool-instance-method","name":"removed?","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":15,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L15"},"def":{"name":"removed?","return_type":"Bool","visibility":"Public","body":"@removed"}},{"html_id":"respawn_window:Int32-instance-method","name":"respawn_window","doc":"\nThe respawn window. One hour by default.\n","summary":"<p>The respawn window.</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":65,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L65"},"def":{"name":"respawn_window","return_type":"Int32","visibility":"Public","body":"@options.respawn_window || 3600"}},{"html_id":"restart_mode:Signal|String-instance-method","name":"restart_mode","doc":"\nDefines how this process should be restarted\n\nstart-term = start new instances and send term to children\nusr1 = just send a usr1 signal to the current instance\nusr2 = just send a usr2 signal to the current instance\nterm-start = stop the old instances, when no longer running, start a new one\n","summary":"<p>Defines how this process should be restarted</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":113,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L113"},"def":{"name":"restart_mode","return_type":"Signal | String","visibility":"Public","body":"@options.restart_mode || \"term-start\""}},{"html_id":"term_signal:Signal-instance-method","name":"term_signal","doc":"\nReturn the signal to send to terminate the process\n","summary":"<p>Return the signal to send to terminate the process</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":101,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L101"},"def":{"name":"term_signal","return_type":"Signal","visibility":"Public","body":"@options.term_signal || Signal::TERM"}},{"html_id":"to_struct:ControlClient::ProcessStatus-instance-method","name":"to_struct","doc":"\nReturn a struct\n","summary":"<p>Return a struct</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":164,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L164"},"def":{"name":"to_struct","return_type":"ControlClient::ProcessStatus","visibility":"Public","body":"ControlClient::ProcessStatus.new(name: self.name, log_color: self.log_color, quantity: self.quantity, max_respawns: self.max_respawns, respawn_window: self.respawn_window, command: self.command, restart_mode: self.restart_mode, log_path: self.log_path, removed: self.removed? ? true : false, proxy_port: proxy_port, proxy_address: proxy_address)"}}],"types":[{"html_id":"procodile/Procodile/Process/Option","path":"Procodile/Process/Option.html","kind":"struct","full_name":"Procodile::Process::Option","name":"Option","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"},{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/process.cr","line_number":203,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L203"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"procodile/YAML/Serializable","kind":"module","full_name":"YAML::Serializable","name":"Serializable"}],"namespace":{"html_id":"procodile/Procodile/Process","kind":"class","full_name":"Procodile::Process","name":"Process"},"constructors":[{"html_id":"new(ctx:YAML::ParseContext,node:YAML::Nodes::Node)-class-method","name":"new","abstract":false,"args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"args_string":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","args_html":"(ctx : YAML::ParseContext, node : YAML::Nodes::Node)","location":{"filename":"src/procodile/process.cr","line_number":204,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L204"},"def":{"name":"new","args":[{"name":"ctx","external_name":"ctx","restriction":"::YAML::ParseContext"},{"name":"node","external_name":"node","restriction":"::YAML::Nodes::Node"}],"visibility":"Public","body":"new_from_yaml_node(ctx, node)"}},{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":242,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L242"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"allocate_port_from:Int32|Nil-instance-method","name":"allocate_port_from","doc":"Return the first port that ports should be allocated from for this process","summary":"<p>Return the first port that ports should be allocated from for this process</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":229,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L229"},"def":{"name":"allocate_port_from","return_type":"Int32 | ::Nil","visibility":"Public","body":"@allocate_port_from"}},{"html_id":"allocate_port_from=(allocate_port_from:Int32|Nil)-instance-method","name":"allocate_port_from=","doc":"Return the first port that ports should be allocated from for this process","summary":"<p>Return the first port that ports should be allocated from for this process</p>","abstract":false,"args":[{"name":"allocate_port_from","external_name":"allocate_port_from","restriction":"Int32 | ::Nil"}],"args_string":"(allocate_port_from : Int32 | Nil)","args_html":"(allocate_port_from : Int32 | Nil)","location":{"filename":"src/procodile/process.cr","line_number":229,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L229"},"def":{"name":"allocate_port_from=","args":[{"name":"allocate_port_from","external_name":"allocate_port_from","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@allocate_port_from = allocate_port_from"}},{"html_id":"env:Hash(String,String)-instance-method","name":"env","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":240,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L240"},"def":{"name":"env","return_type":"Hash(String, String)","visibility":"Public","body":"@env"}},{"html_id":"env=(env:Hash(String,String))-instance-method","name":"env=","abstract":false,"args":[{"name":"env","external_name":"env","restriction":"Hash(String, String)"}],"args_string":"(env : Hash(String, String))","args_html":"(env : Hash(String, String))","location":{"filename":"src/procodile/process.cr","line_number":240,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L240"},"def":{"name":"env=","args":[{"name":"env","external_name":"env","restriction":"Hash(String, String)"}],"visibility":"Public","body":"@env = env"}},{"html_id":"log_file_name:String|Nil-instance-method","name":"log_file_name","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":223,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L223"},"def":{"name":"log_file_name","return_type":"String | ::Nil","visibility":"Public","body":"@log_file_name"}},{"html_id":"log_file_name=(log_file_name:String|Nil)-instance-method","name":"log_file_name=","abstract":false,"args":[{"name":"log_file_name","external_name":"log_file_name","restriction":"String | ::Nil"}],"args_string":"(log_file_name : String | Nil)","args_html":"(log_file_name : String | Nil)","location":{"filename":"src/procodile/process.cr","line_number":223,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L223"},"def":{"name":"log_file_name=","args":[{"name":"log_file_name","external_name":"log_file_name","restriction":"String | ::Nil"}],"visibility":"Public","body":"@log_file_name = log_file_name"}},{"html_id":"log_path:String|Nil-instance-method","name":"log_path","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":222,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L222"},"def":{"name":"log_path","return_type":"String | ::Nil","visibility":"Public","body":"@log_path"}},{"html_id":"log_path=(log_path:String|Nil)-instance-method","name":"log_path=","abstract":false,"args":[{"name":"log_path","external_name":"log_path","restriction":"String | ::Nil"}],"args_string":"(log_path : String | Nil)","args_html":"(log_path : String | Nil)","location":{"filename":"src/procodile/process.cr","line_number":222,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L222"},"def":{"name":"log_path=","args":[{"name":"log_path","external_name":"log_path","restriction":"String | ::Nil"}],"visibility":"Public","body":"@log_path = log_path"}},{"html_id":"max_respawns:Int32|Nil-instance-method","name":"max_respawns","doc":"The maximum number of times this process can be respawned in the given period","summary":"<p>The maximum number of times this process can be respawned in the given period</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":218,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L218"},"def":{"name":"max_respawns","return_type":"Int32 | ::Nil","visibility":"Public","body":"@max_respawns"}},{"html_id":"max_respawns=(max_respawns:Int32|Nil)-instance-method","name":"max_respawns=","doc":"The maximum number of times this process can be respawned in the given period","summary":"<p>The maximum number of times this process can be respawned in the given period</p>","abstract":false,"args":[{"name":"max_respawns","external_name":"max_respawns","restriction":"Int32 | ::Nil"}],"args_string":"(max_respawns : Int32 | Nil)","args_html":"(max_respawns : Int32 | Nil)","location":{"filename":"src/procodile/process.cr","line_number":218,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L218"},"def":{"name":"max_respawns=","args":[{"name":"max_respawns","external_name":"max_respawns","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@max_respawns = max_respawns"}},{"html_id":"merge(other:self|Nil):self-instance-method","name":"merge","abstract":false,"args":[{"name":"other","external_name":"other","restriction":"self | ::Nil"}],"args_string":"(other : self | Nil) : self","args_html":"(other : <span class=\"k\">self</span> | Nil) : <span class=\"k\">self</span>","location":{"filename":"src/procodile/process.cr","line_number":245,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L245"},"def":{"name":"merge","args":[{"name":"other","external_name":"other","restriction":"self | ::Nil"}],"return_type":"self","visibility":"Public","body":"new_process_option = self\n{% for i in @type.instance_vars %}\n      {% if i.name != \"env\" %}\n        new_process_option.{{ i.name }} = other.{{ i.name }} if other.{{ i.name }}\n      {% end %}\n    {% end %}\nif other.env\n  new_process_option.env = new_process_option.env.merge(other.env)\nend\nnew_process_option\n"}},{"html_id":"network_protocol:String|Nil-instance-method","name":"network_protocol","doc":"Return the network protocol for this process","summary":"<p>Return the network protocol for this process</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":238,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L238"},"def":{"name":"network_protocol","return_type":"String | ::Nil","visibility":"Public","body":"@network_protocol"}},{"html_id":"network_protocol=(network_protocol:String|Nil)-instance-method","name":"network_protocol=","doc":"Return the network protocol for this process","summary":"<p>Return the network protocol for this process</p>","abstract":false,"args":[{"name":"network_protocol","external_name":"network_protocol","restriction":"String | ::Nil"}],"args_string":"(network_protocol : String | Nil)","args_html":"(network_protocol : String | Nil)","location":{"filename":"src/procodile/process.cr","line_number":238,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L238"},"def":{"name":"network_protocol=","args":[{"name":"network_protocol","external_name":"network_protocol","restriction":"String | ::Nil"}],"visibility":"Public","body":"@network_protocol = network_protocol"}},{"html_id":"proxy_address:String|Nil-instance-method","name":"proxy_address","doc":"property proxy_address : String?","summary":"<p>property proxy_address : String?</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":235,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L235"},"def":{"name":"proxy_address","return_type":"String | ::Nil","visibility":"Public","body":"@proxy_address"}},{"html_id":"proxy_address=(proxy_address:String|Nil)-instance-method","name":"proxy_address=","doc":"property proxy_address : String?","summary":"<p>property proxy_address : String?</p>","abstract":false,"args":[{"name":"proxy_address","external_name":"proxy_address","restriction":"String | ::Nil"}],"args_string":"(proxy_address : String | Nil)","args_html":"(proxy_address : String | Nil)","location":{"filename":"src/procodile/process.cr","line_number":235,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L235"},"def":{"name":"proxy_address=","args":[{"name":"proxy_address","external_name":"proxy_address","restriction":"String | ::Nil"}],"visibility":"Public","body":"@proxy_address = proxy_address"}},{"html_id":"proxy_port:Int32|Nil-instance-method","name":"proxy_port","doc":"Return the port for the proxy to listen on for this process type","summary":"<p>Return the port for the proxy to listen on for this process type</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":232,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L232"},"def":{"name":"proxy_port","return_type":"Int32 | ::Nil","visibility":"Public","body":"@proxy_port"}},{"html_id":"proxy_port=(proxy_port:Int32|Nil)-instance-method","name":"proxy_port=","doc":"Return the port for the proxy to listen on for this process type","summary":"<p>Return the port for the proxy to listen on for this process type</p>","abstract":false,"args":[{"name":"proxy_port","external_name":"proxy_port","restriction":"Int32 | ::Nil"}],"args_string":"(proxy_port : Int32 | Nil)","args_html":"(proxy_port : Int32 | Nil)","location":{"filename":"src/procodile/process.cr","line_number":232,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L232"},"def":{"name":"proxy_port=","args":[{"name":"proxy_port","external_name":"proxy_port","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@proxy_port = proxy_port"}},{"html_id":"quantity:Int32|Nil-instance-method","name":"quantity","doc":"How many instances of this process should be started","summary":"<p>How many instances of this process should be started</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":207,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L207"},"def":{"name":"quantity","return_type":"Int32 | ::Nil","visibility":"Public","body":"@quantity"}},{"html_id":"quantity=(quantity:Int32|Nil)-instance-method","name":"quantity=","doc":"How many instances of this process should be started","summary":"<p>How many instances of this process should be started</p>","abstract":false,"args":[{"name":"quantity","external_name":"quantity","restriction":"Int32 | ::Nil"}],"args_string":"(quantity : Int32 | Nil)","args_html":"(quantity : Int32 | Nil)","location":{"filename":"src/procodile/process.cr","line_number":207,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L207"},"def":{"name":"quantity=","args":[{"name":"quantity","external_name":"quantity","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@quantity = quantity"}},{"html_id":"respawn_window:Int32|Nil-instance-method","name":"respawn_window","doc":"The respawn window. One hour by default.","summary":"<p>The respawn window.</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":221,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L221"},"def":{"name":"respawn_window","return_type":"Int32 | ::Nil","visibility":"Public","body":"@respawn_window"}},{"html_id":"respawn_window=(respawn_window:Int32|Nil)-instance-method","name":"respawn_window=","doc":"The respawn window. One hour by default.","summary":"<p>The respawn window.</p>","abstract":false,"args":[{"name":"respawn_window","external_name":"respawn_window","restriction":"Int32 | ::Nil"}],"args_string":"(respawn_window : Int32 | Nil)","args_html":"(respawn_window : Int32 | Nil)","location":{"filename":"src/procodile/process.cr","line_number":221,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L221"},"def":{"name":"respawn_window=","args":[{"name":"respawn_window","external_name":"respawn_window","restriction":"Int32 | ::Nil"}],"visibility":"Public","body":"@respawn_window = respawn_window"}},{"html_id":"restart_mode:Signal|String|Nil-instance-method","name":"restart_mode","doc":"Defines how this process should be restarted\n\nstart-term = start new instances and send term to children\nSignal::USR1 = just send a usr1 signal to the current instance\nSignal::USR2 = just send a usr2 signal to the current instance\nterm-start = stop the old instances, when no longer running, start a new one","summary":"<p>Defines how this process should be restarted</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":215,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L215"},"def":{"name":"restart_mode","return_type":"Signal | String | Nil","visibility":"Public","body":"@restart_mode"}},{"html_id":"restart_mode=(restart_mode:Signal|String|Nil)-instance-method","name":"restart_mode=","doc":"Defines how this process should be restarted\n\nstart-term = start new instances and send term to children\nSignal::USR1 = just send a usr1 signal to the current instance\nSignal::USR2 = just send a usr2 signal to the current instance\nterm-start = stop the old instances, when no longer running, start a new one","summary":"<p>Defines how this process should be restarted</p>","abstract":false,"args":[{"name":"restart_mode","external_name":"restart_mode","restriction":"Signal | String | Nil"}],"args_string":"(restart_mode : Signal | String | Nil)","args_html":"(restart_mode : Signal | String | Nil)","location":{"filename":"src/procodile/process.cr","line_number":215,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L215"},"def":{"name":"restart_mode=","args":[{"name":"restart_mode","external_name":"restart_mode","restriction":"Signal | String | Nil"}],"visibility":"Public","body":"@restart_mode = restart_mode"}},{"html_id":"term_signal:Signal|Nil-instance-method","name":"term_signal","doc":"Return the signal to send to terminate the process","summary":"<p>Return the signal to send to terminate the process</p>","abstract":false,"location":{"filename":"src/procodile/process.cr","line_number":226,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L226"},"def":{"name":"term_signal","return_type":"Signal | ::Nil","visibility":"Public","body":"@term_signal"}},{"html_id":"term_signal=(term_signal:Signal|Nil)-instance-method","name":"term_signal=","doc":"Return the signal to send to terminate the process","summary":"<p>Return the signal to send to terminate the process</p>","abstract":false,"args":[{"name":"term_signal","external_name":"term_signal","restriction":"Signal | ::Nil"}],"args_string":"(term_signal : Signal | Nil)","args_html":"(term_signal : Signal | Nil)","location":{"filename":"src/procodile/process.cr","line_number":226,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/process.cr#L226"},"def":{"name":"term_signal=","args":[{"name":"term_signal","external_name":"term_signal","restriction":"Signal | ::Nil"}],"visibility":"Public","body":"@term_signal = term_signal"}}]}]},{"html_id":"procodile/Procodile/SignalHandler","path":"Procodile/SignalHandler.html","kind":"class","full_name":"Procodile::SignalHandler","name":"SignalHandler","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/signal_handler.cr","line_number":8,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/signal_handler.cr#L8"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"QUEUE","name":"QUEUE","value":"[] of Signal","doc":"‰øùÂ≠òÁî®Êà∑ÂèëÈÄÅÁöÑ‰ø°Âè∑.","summary":"<p>‰øùÂ≠òÁî®Êà∑ÂèëÈÄÅÁöÑ‰ø°Âè∑.</p>"},{"id":"SIGNALS","name":"SIGNALS","value":"{Signal::TERM, Signal::USR1, Signal::USR2, Signal::INT, Signal::HUP}","doc":"ÂÖÅËÆ∏ÁöÑ‰ø°Âè∑","summary":"<p>ÂÖÅËÆ∏ÁöÑ‰ø°Âè∑</p>"}],"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"},"constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/procodile/signal_handler.cr","line_number":23,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/signal_handler.cr#L23"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"handle:Nil-instance-method","name":"handle","doc":"ËøêË°åÊã¶Êà™ÁöÑ‰ø°Âè∑ÂØπÂ∫îÁöÑÂ§ÑÁêÜÂáΩÊï∞","summary":"<p>ËøêË°åÊã¶Êà™ÁöÑ‰ø°Âè∑ÂØπÂ∫îÁöÑÂ§ÑÁêÜÂáΩÊï∞</p>","abstract":false,"location":{"filename":"src/procodile/signal_handler.cr","line_number":50,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/signal_handler.cr#L50"},"def":{"name":"handle","return_type":"Nil","visibility":"Public","body":"if (signal = QUEUE.shift?)\n  Procodile.log(nil, \"system\", \"Supervisor received #{signal} signal\")\n  @handlers[signal].try(&.each(&.call))\nend"}},{"html_id":"notice:Nil-instance-method","name":"notice","abstract":false,"location":{"filename":"src/procodile/signal_handler.cr","line_number":45,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/signal_handler.cr#L45"},"def":{"name":"notice","return_type":"Nil","visibility":"Public","body":"@pipe[:writer].puts(\".\")"}},{"html_id":"pipe:Hash(Symbol,IO::FileDescriptor)-instance-method","name":"pipe","abstract":false,"location":{"filename":"src/procodile/signal_handler.cr","line_number":21,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/signal_handler.cr#L21"},"def":{"name":"pipe","return_type":"Hash(Symbol, IO::FileDescriptor)","visibility":"Public","body":"@pipe"}},{"html_id":"register(signal:Signal,&block:->):Nil-instance-method","name":"register","doc":"ÂÖ≥ËÅî‰ø°Âè∑ÂíåÂ§ÑÁêÜÂáΩÊï∞\n\nËøô‰∏™Âú® SignalHandler ÂØπË±°ÂàõÂª∫‰πãÂêéÔºåË¢´ÊâãÂä®Ë∞ÉÁî®","summary":"<p>ÂÖ≥ËÅî‰ø°Âè∑ÂíåÂ§ÑÁêÜÂáΩÊï∞</p>","abstract":false,"args":[{"name":"signal","external_name":"signal","restriction":"Signal"}],"args_string":"(signal : Signal, &block :  -> ) : Nil","args_html":"(signal : Signal, &block :  -> ) : Nil","location":{"filename":"src/procodile/signal_handler.cr","line_number":39,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/signal_handler.cr#L39"},"def":{"name":"register","args":[{"name":"signal","external_name":"signal","restriction":"Signal"}],"yields":0,"block_arity":0,"block_arg":{"name":"block","external_name":"block","restriction":"(->)"},"return_type":"Nil","visibility":"Public","body":"__temp_65 = signal\n@handlers[__temp_65]? || (@handlers[__temp_65] = [] of Proc(Nil))\n@handlers[signal] << block\n"}}]},{"html_id":"procodile/Procodile/Supervisor","path":"Procodile/Supervisor.html","kind":"class","full_name":"Procodile::Supervisor","name":"Supervisor","abstract":false,"superclass":{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"procodile/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/start_supervisor.cr","line_number":2,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/start_supervisor.cr#L2"},{"filename":"src/procodile/supervisor.cr","line_number":6,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L6"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile","kind":"module","full_name":"Procodile","name":"Procodile"},"class_methods":[{"html_id":"start(config:Config,options:CLI::Options=CLI::Options.new,&after_start:Proc(Supervisor,Nil)):Nil-class-method","name":"start","abstract":false,"args":[{"name":"config","external_name":"config","restriction":"Config"},{"name":"options","default_value":"CLI::Options.new","external_name":"options","restriction":"CLI::Options"}],"args_string":"(config : Config, options : CLI::Options = CLI::Options.new, &after_start : Proc(Supervisor, Nil)) : Nil","args_html":"(config : <a href=\"../Procodile/Config.html\">Config</a>, options : <a href=\"../Procodile/CLI/Options.html\">CLI::Options</a> = <span class=\"t\">CLI</span><span class=\"t\">::</span><span class=\"t\">Options</span>.new, &after_start : Proc(<a href=\"../Procodile/Supervisor.html\">Supervisor</a>, Nil)) : Nil","location":{"filename":"src/procodile/start_supervisor.cr","line_number":3,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/start_supervisor.cr#L3"},"def":{"name":"start","args":[{"name":"config","external_name":"config","restriction":"Config"},{"name":"options","default_value":"CLI::Options.new","external_name":"options","restriction":"CLI::Options"}],"yields":0,"block_arity":0,"block_arg":{"name":"after_start","external_name":"after_start","restriction":"Proc(Supervisor, Nil)"},"return_type":"Nil","visibility":"Public","body":"run_options = Supervisor::RunOptions.new(respawn: options.respawn?, stop_when_none: options.stop_when_none?, proxy: options.proxy?, force_single_log: options.foreground?, port_allocations: options.port_allocations, foreground: !!options.foreground?)\ntidy_pids(config)\nif options.clean?\n  FileUtils.rm_rf(Dir[File.join(config.pid_root, \"*\")])\n  puts(\"Emptied PID directory\")\nend\nif !Dir[File.join(config.pid_root, \"*\")].empty?\n  raise(Error.new(\"The PID directory (#{config.pid_root}) is not empty. Cannot start unless things are clean.\"))\nend\nset_process_title(\"[procodile] #{config.app_name} (#{config.root})\")\nif options.foreground?\n  File.write(config.supervisor_pid_path, ::Process.pid)\n  (Supervisor.new(config, run_options)).start(after_start)\nelse\n  FileUtils.rm_rf(File.join(config.pid_root, \"*.pid\"))\n  process = ::Process.fork do\n    log_path = File.open(config.log_path, \"a\")\n    STDOUT.reopen(log_path)\n    STDOUT.sync = true\n    STDERR.reopen(log_path)\n    STDERR.sync = true\n    (Supervisor.new(config, run_options)).start(after_start)\n  end\n  spawn do\n    process.wait\n  end\n  pid = process.pid\n  File.write(config.supervisor_pid_path, pid)\n  puts(\"Started Procodile supervisor with PID #{pid}\")\nend\n"}}],"constructors":[{"html_id":"new(config:Config,run_options:Supervisor::RunOptions=Supervisor::RunOptions.new)-class-method","name":"new","abstract":false,"args":[{"name":"config","external_name":"config","restriction":"Config"},{"name":"run_options","default_value":"Supervisor::RunOptions.new","external_name":"run_options","restriction":"Supervisor::RunOptions"}],"args_string":"(config : Config, run_options : Supervisor::RunOptions = Supervisor::RunOptions.new)","args_html":"(config : <a href=\"../Procodile/Config.html\">Config</a>, run_options : <a href=\"../Procodile/Supervisor/RunOptions.html\">Supervisor::RunOptions</a> = <span class=\"t\">Supervisor</span><span class=\"t\">::</span><span class=\"t\">RunOptions</span>.new)","location":{"filename":"src/procodile/supervisor.cr","line_number":16,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L16"},"def":{"name":"new","args":[{"name":"config","external_name":"config","restriction":"Config"},{"name":"run_options","default_value":"Supervisor::RunOptions.new","external_name":"run_options","restriction":"Supervisor::RunOptions"}],"visibility":"Public","body":"_ = allocate\n_.initialize(config, run_options)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"add_instance(instance:Instance,io:IO::FileDescriptor|Nil=nil):Nil-instance-method","name":"add_instance","abstract":false,"args":[{"name":"instance","external_name":"instance","restriction":"Instance"},{"name":"io","default_value":"nil","external_name":"io","restriction":"IO::FileDescriptor | ::Nil"}],"args_string":"(instance : Instance, io : IO::FileDescriptor | Nil = nil) : Nil","args_html":"(instance : <a href=\"../Procodile/Instance.html\">Instance</a>, io : IO::FileDescriptor | Nil = <span class=\"n\">nil</span>) : Nil","location":{"filename":"src/procodile/supervisor.cr","line_number":236,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L236"},"def":{"name":"add_instance","args":[{"name":"instance","external_name":"instance","restriction":"Instance"},{"name":"io","default_value":"nil","external_name":"io","restriction":"IO::FileDescriptor | ::Nil"}],"return_type":"Nil","visibility":"Public","body":"if io\n  add_reader(instance, io)\nend\n__temp_59 = instance.process\n@processes[__temp_59]? || (@processes[__temp_59] = [] of Instance)\nif @processes[instance.process].includes?(instance)\nelse\n  @processes[instance.process] << instance\nend\n"}},{"html_id":"allow_respawning?:Bool-instance-method","name":"allow_respawning?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":31,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L31"},"def":{"name":"allow_respawning?","return_type":"Bool","visibility":"Public","body":"@run_options.respawn? != false"}},{"html_id":"check_concurrency(options:Supervisor::Options=Supervisor::Options.new):Hash(Symbol,Array(Instance))-instance-method","name":"check_concurrency","abstract":false,"args":[{"name":"options","default_value":"Supervisor::Options.new","external_name":"options","restriction":"Supervisor::Options"}],"args_string":"(options : Supervisor::Options = Supervisor::Options.new) : Hash(Symbol, Array(Instance))","args_html":"(options : <a href=\"../Procodile/Supervisor/Options.html\">Supervisor::Options</a> = <span class=\"t\">Supervisor</span><span class=\"t\">::</span><span class=\"t\">Options</span>.new) : Hash(Symbol, Array(<a href=\"../Procodile/Instance.html\">Instance</a>))","location":{"filename":"src/procodile/supervisor.cr","line_number":174,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L174"},"def":{"name":"check_concurrency","args":[{"name":"options","default_value":"Supervisor::Options.new","external_name":"options","restriction":"Supervisor::Options"}],"return_type":"Hash(Symbol, Array(Instance))","visibility":"Public","body":"Procodile.log(nil, \"system\", \"Checking process concurrency\")\nif options.reload == false\nelse\n  reload_config\nend\nresult = check_instance_quantities\nif result[:started].empty? && result[:stopped].empty?\n  Procodile.log(nil, \"system\", \"Process concurrency looks good\")\nelse\n  if result[:started].present?\n    Procodile.log(nil, \"system\", \"Concurrency check started #{result[:started].map(&.description).join(\", \")}\")\n  end\n  if result[:stopped].present?\n    Procodile.log(nil, \"system\", \"Concurrency check stopped #{result[:stopped].map(&.description).join(\", \")}\")\n  end\nend\nresult\n"}},{"html_id":"config:Config-instance-method","name":"config","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":11,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L11"},"def":{"name":"config","return_type":"Config","visibility":"Public","body":"@config"}},{"html_id":"messages:Array(Message)-instance-method","name":"messages","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":209,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L209"},"def":{"name":"messages","return_type":"Array(Message)","visibility":"Public","body":"messages = [] of Message\nprocesses.each do |process, process_instances|\n  if process.correct_quantity?(process_instances.size)\n  else\n    messages << Message.new(type: :incorrect_quantity, process: process.name, current: process_instances.size, desired: process.quantity)\n  end\n  process_instances.each do |instance|\n    if instance.should_be_running? && !instance.status.running?\n      messages << Message.new(type: :not_running, instance: instance.description, status: instance.status)\n    end\n  end\nend\nmessages\n"}},{"html_id":"processes:Hash(Procodile::Process,Array(Instance))-instance-method","name":"processes","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":13,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L13"},"def":{"name":"processes","return_type":"Hash(Procodile::Process, Array(Instance))","visibility":"Public","body":"@processes"}},{"html_id":"readers:Hash(IO::FileDescriptor,Instance)-instance-method","name":"readers","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":14,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L14"},"def":{"name":"readers","return_type":"Hash(IO::FileDescriptor, Instance)","visibility":"Public","body":"@readers"}},{"html_id":"reload_config:Nil-instance-method","name":"reload_config","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":168,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L168"},"def":{"name":"reload_config","return_type":"Nil","visibility":"Public","body":"Procodile.log(nil, \"system\", \"Reloading configuration\")\n@config.reload\n"}},{"html_id":"remove_instance(instance:Instance):Nil-instance-method","name":"remove_instance","abstract":false,"args":[{"name":"instance","external_name":"instance","restriction":"Instance"}],"args_string":"(instance : Instance) : Nil","args_html":"(instance : <a href=\"../Procodile/Instance.html\">Instance</a>) : Nil","location":{"filename":"src/procodile/supervisor.cr","line_number":248,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L248"},"def":{"name":"remove_instance","args":[{"name":"instance","external_name":"instance","restriction":"Instance"}],"return_type":"Nil","visibility":"Public","body":"if @processes[instance.process]\n  @processes[instance.process].delete(instance)\n  key = @readers.key_for?(instance)\n  if key\n    @readers.delete(key)\n  end\nend"}},{"html_id":"restart(options:Supervisor::Options=Supervisor::Options.new):Array(Array(Instance|Nil))-instance-method","name":"restart","abstract":false,"args":[{"name":"options","default_value":"Supervisor::Options.new","external_name":"options","restriction":"Supervisor::Options"}],"args_string":"(options : Supervisor::Options = Supervisor::Options.new) : Array(Array(Instance | Nil))","args_html":"(options : <a href=\"../Procodile/Supervisor/Options.html\">Supervisor::Options</a> = <span class=\"t\">Supervisor</span><span class=\"t\">::</span><span class=\"t\">Options</span>.new) : Array(Array(<a href=\"../Procodile/Instance.html\">Instance</a> | Nil))","location":{"filename":"src/procodile/supervisor.cr","line_number":116,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L116"},"def":{"name":"restart","args":[{"name":"options","default_value":"Supervisor::Options.new","external_name":"options","restriction":"Supervisor::Options"}],"return_type":"Array(Array(Instance | Nil))","visibility":"Public","body":"wg = WaitGroup.new\n@tag = options.tag\ninstances_restarted = [] of Array(Instance | ::Nil)\nprocesses = options.processes\nreload_config\nif processes.nil?\n  instances = @processes.values.flatten\n  Procodile.log(nil, \"system\", \"Restarting all #{@config.app_name} processes\")\nelse\n  instances = process_names_to_instances(processes)\n  Procodile.log(nil, \"system\", \"Restarting #{instances.size} process(es)\")\nend\nstopped = (check_instance_quantities(:stopped, processes))[:stopped].map do |i|\n  [i, nil]\nend\ninstances_restarted.concat(stopped)\ninstances.each do |instance|\n  if instance.stopping?\n    next\n  end\n  new_instance = instance.restart(wg)\n  instances_restarted << [instance, new_instance]\nend\nchecked = (check_instance_quantities(:started, processes))[:started].map do |i|\n  [nil, i]\nend\ninstances_restarted.concat(checked)\nwg.wait\nlog_listener_reader\ninstances_restarted\n"}},{"html_id":"run_options:Supervisor::RunOptions-instance-method","name":"run_options","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":12,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L12"},"def":{"name":"run_options","return_type":"Supervisor::RunOptions","visibility":"Public","body":"@run_options"}},{"html_id":"run_use_foreground?:Bool-instance-method","name":"run_use_foreground?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":112,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L112"},"def":{"name":"run_use_foreground?","return_type":"Bool","visibility":"Public","body":"@run_options.foreground?"}},{"html_id":"start(after_start:Proc(Supervisor,Nil)):Nil-instance-method","name":"start","abstract":false,"args":[{"name":"after_start","external_name":"after_start","restriction":"Proc(Supervisor, Nil)"}],"args_string":"(after_start : Proc(Supervisor, Nil)) : Nil","args_html":"(after_start : Proc(<a href=\"../Procodile/Supervisor.html\">Supervisor</a>, Nil)) : Nil","location":{"filename":"src/procodile/supervisor.cr","line_number":35,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L35"},"def":{"name":"start","args":[{"name":"after_start","external_name":"after_start","restriction":"Proc(Supervisor, Nil)"}],"return_type":"Nil","visibility":"Public","body":"begin\n  Procodile.log(nil, \"system\", \"Procodile supervisor started with PID #{::Process.pid}\")\n  Procodile.log(nil, \"system\", \"Application root is #{@config.root}\")\n  if @run_options.respawn? == false\n    Procodile.log(nil, \"system\", \"Automatic respawning is disabled\")\n  end\n  ControlServer.start(self)\n  after_start.call(self)\n  watch_for_output\n  @started_at = Time.local\nrescue e\n  Procodile.log(nil, \"system\", \"Error: #{e.class} (#{e.message})\")\n  e.backtrace.each do |bt|\n    Procodile.log(nil, \"system\", \"=> #{bt})\")\n  end\n  stop(Supervisor::Options.new(stop_supervisor: true))\nensure\n  loop do\n    supervise\n    sleep(3.seconds)\n  end\nend"}},{"html_id":"start_processes(process_names:Array(String)|Nil,options:Supervisor::Options=Supervisor::Options.new):Array(Instance)-instance-method","name":"start_processes","abstract":false,"args":[{"name":"process_names","external_name":"process_names","restriction":"Array(String) | ::Nil"},{"name":"options","default_value":"Supervisor::Options.new","external_name":"options","restriction":"Supervisor::Options"}],"args_string":"(process_names : Array(String) | Nil, options : Supervisor::Options = Supervisor::Options.new) : Array(Instance)","args_html":"(process_names : Array(String) | Nil, options : <a href=\"../Procodile/Supervisor/Options.html\">Supervisor::Options</a> = <span class=\"t\">Supervisor</span><span class=\"t\">::</span><span class=\"t\">Options</span>.new) : Array(<a href=\"../Procodile/Instance.html\">Instance</a>)","location":{"filename":"src/procodile/supervisor.cr","line_number":60,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L60"},"def":{"name":"start_processes","args":[{"name":"process_names","external_name":"process_names","restriction":"Array(String) | ::Nil"},{"name":"options","default_value":"Supervisor::Options.new","external_name":"options","restriction":"Supervisor::Options"}],"return_type":"Array(Instance)","visibility":"Public","body":"@tag = options.tag\ninstances_started = [] of Instance\nreload_config\n@config.processes.each do |name, process|\n  if process_names && !(process_names.includes?(name.to_s))\n    next\n  end\n  if @processes[process]? && !@processes[process].empty?\n    next\n  end\n  instances = process.generate_instances(self)\n  instances.each(&.start)\n  instances_started.concat(instances)\nend\ninstances_started\n"}},{"html_id":"started_at:Time|Nil-instance-method","name":"started_at","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":10,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L10"},"def":{"name":"started_at","return_type":"Time | ::Nil","visibility":"Public","body":"@started_at"}},{"html_id":"stop(options:Supervisor::Options=Supervisor::Options.new):Array(Instance)-instance-method","name":"stop","abstract":false,"args":[{"name":"options","default_value":"Supervisor::Options.new","external_name":"options","restriction":"Supervisor::Options"}],"args_string":"(options : Supervisor::Options = Supervisor::Options.new) : Array(Instance)","args_html":"(options : <a href=\"../Procodile/Supervisor/Options.html\">Supervisor::Options</a> = <span class=\"t\">Supervisor</span><span class=\"t\">::</span><span class=\"t\">Options</span>.new) : Array(<a href=\"../Procodile/Instance.html\">Instance</a>)","location":{"filename":"src/procodile/supervisor.cr","line_number":81,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L81"},"def":{"name":"stop","args":[{"name":"options","default_value":"Supervisor::Options.new","external_name":"options","restriction":"Supervisor::Options"}],"return_type":"Array(Instance)","visibility":"Public","body":"if options.stop_supervisor\n  @run_options.stop_when_none = true\nend\nreload_config\nprocesses = options.processes\ninstances_stopped = [] of Instance\nif processes.nil?\n  Procodile.log(nil, \"system\", \"Stopping all #{@config.app_name} processes\")\n  @processes.each do |_, instances|\n    instances.each do |instance|\n      instance.stop\n      instances_stopped << instance\n    end\n  end\nelse\n  instances = process_names_to_instances(processes)\n  Procodile.log(nil, \"system\", \"Stopping #{instances.size} process(es)\")\n  instances.each do |instance|\n    instance.stop\n    instances_stopped << instance\n  end\nend\ninstances_stopped\n"}},{"html_id":"stop_supervisor:Nil-instance-method","name":"stop_supervisor","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":160,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L160"},"def":{"name":"stop_supervisor","return_type":"Nil","visibility":"Public","body":"Procodile.log(nil, \"system\", \"Stopping Procodile supervisor\")\nFileUtils.rm_rf(File.join(@config.pid_root, \"procodile.pid\"))\nexit(0)\n"}},{"html_id":"tag:String|Nil-instance-method","name":"tag","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":9,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L9"},"def":{"name":"tag","return_type":"String | ::Nil","visibility":"Public","body":"@tag"}},{"html_id":"to_hash:NamedTuple(started_at:Int64|Nil,pid:Int64)-instance-method","name":"to_hash","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":200,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L200"},"def":{"name":"to_hash","return_type":"NamedTuple(started_at: Int64 | ::Nil, pid: Int64)","visibility":"Public","body":"started_at = @started_at\n{started_at: started_at ? started_at.to_unix : nil, pid: ::Process.pid}\n"}}],"types":[{"html_id":"procodile/Procodile/Supervisor/CheckInstanceQuantitiesType","path":"Procodile/Supervisor/CheckInstanceQuantitiesType.html","kind":"enum","full_name":"Procodile::Supervisor::CheckInstanceQuantitiesType","name":"CheckInstanceQuantitiesType","abstract":false,"ancestors":[{"html_id":"procodile/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"procodile/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/supervisor.cr","line_number":471,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L471"}],"repository_name":"procodile","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"Both","name":"Both","value":"0"},{"id":"Started","name":"Started","value":"1"},{"id":"Stopped","name":"Stopped","value":"2"}],"namespace":{"html_id":"procodile/Procodile/Supervisor","kind":"class","full_name":"Procodile::Supervisor","name":"Supervisor"},"instance_methods":[{"html_id":"both?-instance-method","name":"both?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":472,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L472"},"def":{"name":"both?","visibility":"Public","body":"self == Both"}},{"html_id":"started?-instance-method","name":"started?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":473,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L473"},"def":{"name":"started?","visibility":"Public","body":"self == Started"}},{"html_id":"stopped?-instance-method","name":"stopped?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":474,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L474"},"def":{"name":"stopped?","visibility":"Public","body":"self == Stopped"}}]},{"html_id":"procodile/Procodile/Supervisor/Message","path":"Procodile/Supervisor/Message.html","kind":"struct","full_name":"Procodile::Supervisor::Message","name":"Message","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"},{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/supervisor.cr","line_number":434,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L434"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"procodile/JSON/Serializable","kind":"module","full_name":"JSON::Serializable","name":"Serializable"}],"namespace":{"html_id":"procodile/Procodile/Supervisor","kind":"class","full_name":"Procodile::Supervisor","name":"Supervisor"},"doc":"Supervisor message","summary":"<p>Supervisor message</p>","constructors":[{"html_id":"new(pull:JSON::PullParser)-class-method","name":"new","abstract":false,"args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"args_string":"(pull : JSON::PullParser)","args_html":"(pull : JSON::PullParser)","location":{"filename":"src/procodile/supervisor.cr","line_number":441,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L441"},"def":{"name":"new","args":[{"name":"pull","external_name":"pull","restriction":"::JSON::PullParser"}],"visibility":"Public","body":"new_from_json_pull_parser(pull)"}},{"html_id":"new(type:Type,process:String|Nil=nil,current:Int32|Nil=nil,desired:Int32|Nil=nil,instance:String|Nil=nil,status:Instance::Status|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"type","external_name":"type","restriction":"Type"},{"name":"process","default_value":"nil","external_name":"process","restriction":"String | ::Nil"},{"name":"current","default_value":"nil","external_name":"current","restriction":"Int32 | ::Nil"},{"name":"desired","default_value":"nil","external_name":"desired","restriction":"Int32 | ::Nil"},{"name":"instance","default_value":"nil","external_name":"instance","restriction":"String | ::Nil"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Instance::Status | ::Nil"}],"args_string":"(type : Type, process : String | Nil = nil, current : Int32 | Nil = nil, desired : Int32 | Nil = nil, instance : String | Nil = nil, status : Instance::Status | Nil = nil)","args_html":"(type : <a href=\"../../Procodile/Supervisor/Message/Type.html\">Type</a>, process : String | Nil = <span class=\"n\">nil</span>, current : Int32 | Nil = <span class=\"n\">nil</span>, desired : Int32 | Nil = <span class=\"n\">nil</span>, instance : String | Nil = <span class=\"n\">nil</span>, status : <a href=\"../../Procodile/Instance/Status.html\">Instance::Status</a> | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/procodile/supervisor.cr","line_number":450,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L450"},"def":{"name":"new","args":[{"name":"type","external_name":"type","restriction":"Type"},{"name":"process","default_value":"nil","external_name":"process","restriction":"String | ::Nil"},{"name":"current","default_value":"nil","external_name":"current","restriction":"Int32 | ::Nil"},{"name":"desired","default_value":"nil","external_name":"desired","restriction":"Int32 | ::Nil"},{"name":"instance","default_value":"nil","external_name":"instance","restriction":"String | ::Nil"},{"name":"status","default_value":"nil","external_name":"status","restriction":"Instance::Status | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(type, process, current, desired, instance, status)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"current:Int32|Nil-instance-method","name":"current","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":445,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L445"},"def":{"name":"current","return_type":"Int32 | ::Nil","visibility":"Public","body":"@current"}},{"html_id":"desired:Int32|Nil-instance-method","name":"desired","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":446,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L446"},"def":{"name":"desired","return_type":"Int32 | ::Nil","visibility":"Public","body":"@desired"}},{"html_id":"instance:String|Nil-instance-method","name":"instance","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":447,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L447"},"def":{"name":"instance","return_type":"String | ::Nil","visibility":"Public","body":"@instance"}},{"html_id":"process:String|Nil-instance-method","name":"process","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":444,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L444"},"def":{"name":"process","return_type":"String | ::Nil","visibility":"Public","body":"@process"}},{"html_id":"status:Instance::Status|Nil-instance-method","name":"status","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":448,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L448"},"def":{"name":"status","return_type":"Instance::Status | ::Nil","visibility":"Public","body":"@status"}},{"html_id":"to_s(io:IO):Nil-instance-method","name":"to_s","doc":"Same as `#inspect(io)`.","summary":"<p>Same as <code>#inspect(io)</code>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"}],"args_string":"(io : IO) : Nil","args_html":"(io : IO) : Nil","location":{"filename":"src/procodile/supervisor.cr","line_number":460,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L460"},"def":{"name":"to_s","args":[{"name":"io","external_name":"io","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"case type\nin .not_running?\n  io.print(\"#{instance} is not running (#{status})\")\nin .incorrect_quantity?\n  io.print(\"#{process} has #{current} instances (should have #{desired})\")\nend"}},{"html_id":"type:Type-instance-method","name":"type","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":443,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L443"},"def":{"name":"type","return_type":"Type","visibility":"Public","body":"@type"}}],"types":[{"html_id":"procodile/Procodile/Supervisor/Message/Type","path":"Procodile/Supervisor/Message/Type.html","kind":"enum","full_name":"Procodile::Supervisor::Message::Type","name":"Type","abstract":false,"ancestors":[{"html_id":"procodile/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"procodile/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/supervisor.cr","line_number":436,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L436"}],"repository_name":"procodile","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"NotRunning","name":"NotRunning","value":"0"},{"id":"IncorrectQuantity","name":"IncorrectQuantity","value":"1"}],"namespace":{"html_id":"procodile/Procodile/Supervisor/Message","kind":"struct","full_name":"Procodile::Supervisor::Message","name":"Message"},"doc":"Message type","summary":"<p>Message type</p>","instance_methods":[{"html_id":"incorrect_quantity?-instance-method","name":"incorrect_quantity?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":438,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L438"},"def":{"name":"incorrect_quantity?","visibility":"Public","body":"self == IncorrectQuantity"}},{"html_id":"not_running?-instance-method","name":"not_running?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":437,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L437"},"def":{"name":"not_running?","visibility":"Public","body":"self == NotRunning"}}]}]},{"html_id":"procodile/Procodile/Supervisor/Options","path":"Procodile/Supervisor/Options.html","kind":"struct","full_name":"Procodile::Supervisor::Options","name":"Options","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/supervisor.cr","line_number":498,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L498"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile/Supervisor","kind":"class","full_name":"Procodile::Supervisor","name":"Supervisor"},"doc":"ËøôÁßçÂÜôÊ≥ïÂÖÅËÆ∏‰ª•‰ªªÊÑèÊñπÂºèÂàùÂßãÂåñ Supervisor::Options","summary":"<p>ËøôÁßçÂÜôÊ≥ïÂÖÅËÆ∏‰ª•‰ªªÊÑèÊñπÂºèÂàùÂßãÂåñ Supervisor::Options</p>","constructors":[{"html_id":"new(processes:Array(String)|Nil=nil,stop_supervisor:Bool|Nil=nil,tag:String|Nil=nil,reload:Bool|Nil=nil)-class-method","name":"new","abstract":false,"args":[{"name":"processes","default_value":"nil","external_name":"processes","restriction":"Array(String) | ::Nil"},{"name":"stop_supervisor","default_value":"nil","external_name":"stop_supervisor","restriction":"Bool | ::Nil"},{"name":"tag","default_value":"nil","external_name":"tag","restriction":"String | ::Nil"},{"name":"reload","default_value":"nil","external_name":"reload","restriction":"Bool | ::Nil"}],"args_string":"(processes : Array(String) | Nil = nil, stop_supervisor : Bool | Nil = nil, tag : String | Nil = nil, reload : Bool | Nil = nil)","args_html":"(processes : Array(String) | Nil = <span class=\"n\">nil</span>, stop_supervisor : Bool | Nil = <span class=\"n\">nil</span>, tag : String | Nil = <span class=\"n\">nil</span>, reload : Bool | Nil = <span class=\"n\">nil</span>)","location":{"filename":"src/procodile/supervisor.cr","line_number":504,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L504"},"def":{"name":"new","args":[{"name":"processes","default_value":"nil","external_name":"processes","restriction":"Array(String) | ::Nil"},{"name":"stop_supervisor","default_value":"nil","external_name":"stop_supervisor","restriction":"Bool | ::Nil"},{"name":"tag","default_value":"nil","external_name":"tag","restriction":"String | ::Nil"},{"name":"reload","default_value":"nil","external_name":"reload","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"_ = allocate\n_.initialize(processes, stop_supervisor, tag, reload)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"processes:Array(String)|Nil-instance-method","name":"processes","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":499,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L499"},"def":{"name":"processes","return_type":"Array(String) | ::Nil","visibility":"Public","body":"@processes"}},{"html_id":"reload:Bool|Nil-instance-method","name":"reload","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":502,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L502"},"def":{"name":"reload","return_type":"Bool | ::Nil","visibility":"Public","body":"@reload"}},{"html_id":"stop_supervisor:Bool|Nil-instance-method","name":"stop_supervisor","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":500,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L500"},"def":{"name":"stop_supervisor","return_type":"Bool | ::Nil","visibility":"Public","body":"@stop_supervisor"}},{"html_id":"tag:String|Nil-instance-method","name":"tag","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":501,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L501"},"def":{"name":"tag","return_type":"String | ::Nil","visibility":"Public","body":"@tag"}}]},{"html_id":"procodile/Procodile/Supervisor/RunOptions","path":"Procodile/Supervisor/RunOptions.html","kind":"struct","full_name":"Procodile::Supervisor::RunOptions","name":"RunOptions","abstract":false,"superclass":{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"procodile/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"procodile/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"procodile/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/procodile/supervisor.cr","line_number":477,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L477"}],"repository_name":"procodile","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"procodile/Procodile/Supervisor","kind":"class","full_name":"Procodile::Supervisor","name":"Supervisor"},"constructors":[{"html_id":"new(respawn:Bool|Nil,stop_when_none:Bool|Nil,force_single_log:Bool|Nil,port_allocations:Hash(String,Int32)|Nil,proxy:Bool|Nil,foreground:Bool=false)-class-method","name":"new","abstract":false,"args":[{"name":"respawn","external_name":"respawn","restriction":"Bool | ::Nil"},{"name":"stop_when_none","external_name":"stop_when_none","restriction":"Bool | ::Nil"},{"name":"force_single_log","external_name":"force_single_log","restriction":"Bool | ::Nil"},{"name":"port_allocations","external_name":"port_allocations","restriction":"Hash(String, Int32) | ::Nil"},{"name":"proxy","external_name":"proxy","restriction":"Bool | ::Nil"},{"name":"foreground","default_value":"false","external_name":"foreground","restriction":"Bool"}],"args_string":"(respawn : Bool | Nil, stop_when_none : Bool | Nil, force_single_log : Bool | Nil, port_allocations : Hash(String, Int32) | Nil, proxy : Bool | Nil, foreground : Bool = false)","args_html":"(respawn : Bool | Nil, stop_when_none : Bool | Nil, force_single_log : Bool | Nil, port_allocations : Hash(String, Int32) | Nil, proxy : Bool | Nil, foreground : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/procodile/supervisor.cr","line_number":486,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L486"},"def":{"name":"new","args":[{"name":"respawn","external_name":"respawn","restriction":"Bool | ::Nil"},{"name":"stop_when_none","external_name":"stop_when_none","restriction":"Bool | ::Nil"},{"name":"force_single_log","external_name":"force_single_log","restriction":"Bool | ::Nil"},{"name":"port_allocations","external_name":"port_allocations","restriction":"Hash(String, Int32) | ::Nil"},{"name":"proxy","external_name":"proxy","restriction":"Bool | ::Nil"},{"name":"foreground","default_value":"false","external_name":"foreground","restriction":"Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(respawn, stop_when_none, force_single_log, port_allocations, proxy, foreground)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"html_id":"force_single_log=(force_single_log:Bool|Nil)-instance-method","name":"force_single_log=","abstract":false,"args":[{"name":"force_single_log","external_name":"force_single_log","restriction":"Bool | ::Nil"}],"args_string":"(force_single_log : Bool | Nil)","args_html":"(force_single_log : Bool | Nil)","location":{"filename":"src/procodile/supervisor.cr","line_number":482,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L482"},"def":{"name":"force_single_log=","args":[{"name":"force_single_log","external_name":"force_single_log","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@force_single_log = force_single_log"}},{"html_id":"force_single_log?:Bool|Nil-instance-method","name":"force_single_log?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":482,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L482"},"def":{"name":"force_single_log?","return_type":"Bool | ::Nil","visibility":"Public","body":"@force_single_log"}},{"html_id":"foreground=(foreground:Bool)-instance-method","name":"foreground=","abstract":false,"args":[{"name":"foreground","external_name":"foreground","restriction":"Bool"}],"args_string":"(foreground : Bool)","args_html":"(foreground : Bool)","location":{"filename":"src/procodile/supervisor.cr","line_number":481,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L481"},"def":{"name":"foreground=","args":[{"name":"foreground","external_name":"foreground","restriction":"Bool"}],"visibility":"Public","body":"@foreground = foreground"}},{"html_id":"foreground?:Bool-instance-method","name":"foreground?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":481,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L481"},"def":{"name":"foreground?","return_type":"Bool","visibility":"Public","body":"@foreground"}},{"html_id":"port_allocations:Hash(String,Int32)|Nil-instance-method","name":"port_allocations","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":478,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L478"},"def":{"name":"port_allocations","return_type":"Hash(String, Int32) | ::Nil","visibility":"Public","body":"@port_allocations"}},{"html_id":"port_allocations=(port_allocations:Hash(String,Int32)|Nil)-instance-method","name":"port_allocations=","abstract":false,"args":[{"name":"port_allocations","external_name":"port_allocations","restriction":"Hash(String, Int32) | ::Nil"}],"args_string":"(port_allocations : Hash(String, Int32) | Nil)","args_html":"(port_allocations : Hash(String, Int32) | Nil)","location":{"filename":"src/procodile/supervisor.cr","line_number":478,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L478"},"def":{"name":"port_allocations=","args":[{"name":"port_allocations","external_name":"port_allocations","restriction":"Hash(String, Int32) | ::Nil"}],"visibility":"Public","body":"@port_allocations = port_allocations"}},{"html_id":"proxy=(proxy:Bool|Nil)-instance-method","name":"proxy=","abstract":false,"args":[{"name":"proxy","external_name":"proxy","restriction":"Bool | ::Nil"}],"args_string":"(proxy : Bool | Nil)","args_html":"(proxy : Bool | Nil)","location":{"filename":"src/procodile/supervisor.cr","line_number":480,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L480"},"def":{"name":"proxy=","args":[{"name":"proxy","external_name":"proxy","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@proxy = proxy"}},{"html_id":"proxy?:Bool|Nil-instance-method","name":"proxy?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":480,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L480"},"def":{"name":"proxy?","return_type":"Bool | ::Nil","visibility":"Public","body":"@proxy"}},{"html_id":"respawn=(respawn:Bool|Nil)-instance-method","name":"respawn=","abstract":false,"args":[{"name":"respawn","external_name":"respawn","restriction":"Bool | ::Nil"}],"args_string":"(respawn : Bool | Nil)","args_html":"(respawn : Bool | Nil)","location":{"filename":"src/procodile/supervisor.cr","line_number":483,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L483"},"def":{"name":"respawn=","args":[{"name":"respawn","external_name":"respawn","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@respawn = respawn"}},{"html_id":"respawn?:Bool|Nil-instance-method","name":"respawn?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":483,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L483"},"def":{"name":"respawn?","return_type":"Bool | ::Nil","visibility":"Public","body":"@respawn"}},{"html_id":"stop_when_none=(stop_when_none:Bool|Nil)-instance-method","name":"stop_when_none=","abstract":false,"args":[{"name":"stop_when_none","external_name":"stop_when_none","restriction":"Bool | ::Nil"}],"args_string":"(stop_when_none : Bool | Nil)","args_html":"(stop_when_none : Bool | Nil)","location":{"filename":"src/procodile/supervisor.cr","line_number":484,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L484"},"def":{"name":"stop_when_none=","args":[{"name":"stop_when_none","external_name":"stop_when_none","restriction":"Bool | ::Nil"}],"visibility":"Public","body":"@stop_when_none = stop_when_none"}},{"html_id":"stop_when_none?:Bool|Nil-instance-method","name":"stop_when_none?","abstract":false,"location":{"filename":"src/procodile/supervisor.cr","line_number":484,"url":"https://github.com/crystal-china/procodile/blob/v1.1.0/src/procodile/supervisor.cr#L484"},"def":{"name":"stop_when_none?","return_type":"Bool | ::Nil","visibility":"Public","body":"@stop_when_none"}}]}]}]}]}})